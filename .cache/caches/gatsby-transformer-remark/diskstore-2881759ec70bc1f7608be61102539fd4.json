{"expireTime":9007200815366030000,"key":"transformer-remark-markdown-ast-04e6a1574e6ef6bea3c82a1784aa6d5f-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"heading","depth":3,"children":[{"type":"link","url":"#object-oriented-design","title":null,"data":{"hProperties":{"aria-label":"object oriented design permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Object Oriented Design","position":{"start":{"line":2,"column":5,"offset":5},"end":{"line":2,"column":27,"offset":27},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":27,"offset":27},"indent":[]},"data":{"id":"object-oriented-design","htmlAttributes":{"id":"object-oriented-design"},"hProperties":{"id":"object-oriented-design"}}},{"type":"paragraph","children":[{"type":"text","value":"Today we’re moving onto controllers, the C in MVC. ","position":{"start":{"line":4,"column":1,"offset":29},"end":{"line":4,"column":52,"offset":80},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":29},"end":{"line":4,"column":52,"offset":80},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The controller takes input from the user and decides what to do.","position":{"start":{"line":6,"column":1,"offset":82},"end":{"line":6,"column":65,"offset":146},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":82},"end":{"line":6,"column":65,"offset":146},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Controllers:","position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":8,"column":13,"offset":160},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":148},"end":{"line":8,"column":13,"offset":160},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Glue of the system","position":{"start":{"line":10,"column":3,"offset":164},"end":{"line":10,"column":21,"offset":182},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":164},"end":{"line":10,"column":21,"offset":182},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":162},"end":{"line":10,"column":21,"offset":182},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Controls how and when the model is used","position":{"start":{"line":11,"column":3,"offset":185},"end":{"line":11,"column":42,"offset":224},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":185},"end":{"line":11,"column":42,"offset":224},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":183},"end":{"line":11,"column":42,"offset":224},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Controls what must be shown to the view and when (in some cases)","position":{"start":{"line":12,"column":3,"offset":227},"end":{"line":12,"column":67,"offset":291},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":227},"end":{"line":12,"column":67,"offset":291},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":225},"end":{"line":12,"column":67,"offset":291},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Controls what action must be taken when user interacts with system (in some cases)","position":{"start":{"line":13,"column":3,"offset":294},"end":{"line":13,"column":85,"offset":376},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":294},"end":{"line":13,"column":85,"offset":376},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":292},"end":{"line":13,"column":85,"offset":376},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Controls the sequence of operations in an application(in some cases)","position":{"start":{"line":14,"column":3,"offset":379},"end":{"line":14,"column":71,"offset":447},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":379},"end":{"line":14,"column":71,"offset":447},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":377},"end":{"line":14,"column":71,"offset":447},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":162},"end":{"line":14,"column":71,"offset":447},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The view should ","position":{"start":{"line":16,"column":1,"offset":449},"end":{"line":16,"column":17,"offset":465},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"NEVER","position":{"start":{"line":16,"column":19,"offset":467},"end":{"line":16,"column":24,"offset":472},"indent":[]}}],"position":{"start":{"line":16,"column":17,"offset":465},"end":{"line":16,"column":26,"offset":474},"indent":[]}},{"type":"text","value":" talk directly to the model (and vice versa). The controller is the middle man. ","position":{"start":{"line":16,"column":26,"offset":474},"end":{"line":16,"column":106,"offset":554},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":449},"end":{"line":16,"column":106,"offset":554},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"MVC Pattern:","position":{"start":{"line":18,"column":1,"offset":556},"end":{"line":18,"column":13,"offset":568},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":556},"end":{"line":18,"column":13,"offset":568},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Model: Offers actual operations","position":{"start":{"line":20,"column":3,"offset":572},"end":{"line":20,"column":34,"offset":603},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":572},"end":{"line":20,"column":34,"offset":603},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Oblivious to when they are needed and how to present results","position":{"start":{"line":21,"column":4,"offset":607},"end":{"line":21,"column":64,"offset":667},"indent":[]}}],"position":{"start":{"line":21,"column":4,"offset":607},"end":{"line":21,"column":64,"offset":667},"indent":[]}}],"position":{"start":{"line":21,"column":2,"offset":605},"end":{"line":21,"column":64,"offset":667},"indent":[]}}],"position":{"start":{"line":21,"column":2,"offset":605},"end":{"line":21,"column":64,"offset":667},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":570},"end":{"line":21,"column":64,"offset":667},"indent":[1]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"View: Presents results","position":{"start":{"line":22,"column":3,"offset":670},"end":{"line":22,"column":25,"offset":692},"indent":[]}}],"position":{"start":{"line":22,"column":3,"offset":670},"end":{"line":22,"column":25,"offset":692},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Oblivious to how they are produced or what to do next","position":{"start":{"line":23,"column":4,"offset":696},"end":{"line":23,"column":57,"offset":749},"indent":[]}}],"position":{"start":{"line":23,"column":4,"offset":696},"end":{"line":23,"column":57,"offset":749},"indent":[]}}],"position":{"start":{"line":23,"column":2,"offset":694},"end":{"line":23,"column":57,"offset":749},"indent":[]}}],"position":{"start":{"line":23,"column":2,"offset":694},"end":{"line":23,"column":57,"offset":749},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":668},"end":{"line":23,"column":57,"offset":749},"indent":[1]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Controller: Delegates to model and view","position":{"start":{"line":24,"column":3,"offset":752},"end":{"line":24,"column":42,"offset":791},"indent":[]}}],"position":{"start":{"line":24,"column":3,"offset":752},"end":{"line":24,"column":42,"offset":791},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Oblivious to how model completes the operations or how specifically the view shows output","position":{"start":{"line":25,"column":4,"offset":795},"end":{"line":25,"column":93,"offset":884},"indent":[]}}],"position":{"start":{"line":25,"column":4,"offset":795},"end":{"line":25,"column":93,"offset":884},"indent":[]}}],"position":{"start":{"line":25,"column":2,"offset":793},"end":{"line":25,"column":93,"offset":884},"indent":[]}}],"position":{"start":{"line":25,"column":2,"offset":793},"end":{"line":25,"column":93,"offset":884},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":750},"end":{"line":25,"column":93,"offset":884},"indent":[1]}}],"position":{"start":{"line":20,"column":1,"offset":570},"end":{"line":25,"column":93,"offset":884},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Our next assignment is going to be the controller of Freecell. Our FreecellController looks like this:","position":{"start":{"line":27,"column":1,"offset":886},"end":{"line":27,"column":103,"offset":988},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":886},"end":{"line":27,"column":103,"offset":988},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"FreeCellController: ","position":{"start":{"line":29,"column":1,"offset":990},"end":{"line":29,"column":21,"offset":1010},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":990},"end":{"line":29,"column":21,"offset":1010},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"“Controls” the game","position":{"start":{"line":31,"column":3,"offset":1014},"end":{"line":31,"column":22,"offset":1033},"indent":[]}}],"position":{"start":{"line":31,"column":3,"offset":1014},"end":{"line":31,"column":22,"offset":1033},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1012},"end":{"line":31,"column":22,"offset":1033},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Uses the model and the view in specific sequence","position":{"start":{"line":32,"column":3,"offset":1036},"end":{"line":32,"column":51,"offset":1084},"indent":[]}}],"position":{"start":{"line":32,"column":3,"offset":1036},"end":{"line":32,"column":51,"offset":1084},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Determines when to ask for user input","position":{"start":{"line":33,"column":4,"offset":1088},"end":{"line":33,"column":41,"offset":1125},"indent":[]}}],"position":{"start":{"line":33,"column":4,"offset":1088},"end":{"line":33,"column":41,"offset":1125},"indent":[]}}],"position":{"start":{"line":33,"column":2,"offset":1086},"end":{"line":33,"column":41,"offset":1125},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Determines when to use which operation of model","position":{"start":{"line":34,"column":4,"offset":1129},"end":{"line":34,"column":51,"offset":1176},"indent":[]}}],"position":{"start":{"line":34,"column":4,"offset":1129},"end":{"line":34,"column":51,"offset":1176},"indent":[]}}],"position":{"start":{"line":34,"column":2,"offset":1127},"end":{"line":34,"column":51,"offset":1176},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Determines when to show output to the view","position":{"start":{"line":35,"column":4,"offset":1180},"end":{"line":35,"column":46,"offset":1222},"indent":[]}}],"position":{"start":{"line":35,"column":4,"offset":1180},"end":{"line":35,"column":46,"offset":1222},"indent":[]}}],"position":{"start":{"line":35,"column":2,"offset":1178},"end":{"line":35,"column":46,"offset":1222},"indent":[]}}],"position":{"start":{"line":33,"column":2,"offset":1086},"end":{"line":35,"column":46,"offset":1222},"indent":[2,2]}}],"position":{"start":{"line":32,"column":1,"offset":1034},"end":{"line":35,"column":46,"offset":1222},"indent":[1,1,1]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The sequence of the game is determined by the controller, not the user","position":{"start":{"line":36,"column":3,"offset":1225},"end":{"line":36,"column":73,"offset":1295},"indent":[]}}],"position":{"start":{"line":36,"column":3,"offset":1225},"end":{"line":36,"column":73,"offset":1295},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1223},"end":{"line":36,"column":73,"offset":1295},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1012},"end":{"line":36,"column":73,"offset":1295},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Synchronous Controllers","position":{"start":{"line":39,"column":1,"offset":1298},"end":{"line":39,"column":24,"offset":1321},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1298},"end":{"line":39,"column":24,"offset":1321},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Determines the sequence of operations of the system","position":{"start":{"line":41,"column":3,"offset":1325},"end":{"line":41,"column":54,"offset":1376},"indent":[]}}],"position":{"start":{"line":41,"column":3,"offset":1325},"end":{"line":41,"column":54,"offset":1376},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1323},"end":{"line":41,"column":54,"offset":1376},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Determines when and how the system interacts with something external","position":{"start":{"line":42,"column":3,"offset":1379},"end":{"line":42,"column":71,"offset":1447},"indent":[]}}],"position":{"start":{"line":42,"column":3,"offset":1379},"end":{"line":42,"column":71,"offset":1447},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1377},"end":{"line":42,"column":71,"offset":1447},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Suitable for pre-baked “rules-based” applications, like games","position":{"start":{"line":43,"column":3,"offset":1450},"end":{"line":43,"column":64,"offset":1511},"indent":[]}}],"position":{"start":{"line":43,"column":3,"offset":1450},"end":{"line":43,"column":64,"offset":1511},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1448},"end":{"line":43,"column":64,"offset":1511},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Challenges:","position":{"start":{"line":44,"column":3,"offset":1514},"end":{"line":44,"column":14,"offset":1525},"indent":[]}}],"position":{"start":{"line":44,"column":3,"offset":1514},"end":{"line":44,"column":14,"offset":1525},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"How to truly separate controller from view so each one is replacable?","position":{"start":{"line":45,"column":4,"offset":1529},"end":{"line":45,"column":73,"offset":1598},"indent":[]}}],"position":{"start":{"line":45,"column":4,"offset":1529},"end":{"line":45,"column":73,"offset":1598},"indent":[]}}],"position":{"start":{"line":45,"column":2,"offset":1527},"end":{"line":45,"column":73,"offset":1598},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"What to do when system is reactive in nature (to user input)?","position":{"start":{"line":46,"column":4,"offset":1602},"end":{"line":46,"column":65,"offset":1663},"indent":[]}}],"position":{"start":{"line":46,"column":4,"offset":1602},"end":{"line":46,"column":65,"offset":1663},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"User interaction decides program behavior, not controller","position":{"start":{"line":47,"column":5,"offset":1668},"end":{"line":47,"column":62,"offset":1725},"indent":[]}}],"position":{"start":{"line":47,"column":5,"offset":1668},"end":{"line":47,"column":62,"offset":1725},"indent":[]}}],"position":{"start":{"line":47,"column":3,"offset":1666},"end":{"line":47,"column":62,"offset":1725},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Examples: Microsoft Word, IntelliJ","position":{"start":{"line":48,"column":5,"offset":1730},"end":{"line":48,"column":39,"offset":1764},"indent":[]}}],"position":{"start":{"line":48,"column":5,"offset":1730},"end":{"line":48,"column":39,"offset":1764},"indent":[]}}],"position":{"start":{"line":48,"column":3,"offset":1728},"end":{"line":48,"column":39,"offset":1764},"indent":[]}}],"position":{"start":{"line":47,"column":3,"offset":1666},"end":{"line":48,"column":39,"offset":1764},"indent":[3]}}],"position":{"start":{"line":46,"column":2,"offset":1600},"end":{"line":48,"column":39,"offset":1764},"indent":[2,2]}}],"position":{"start":{"line":45,"column":2,"offset":1527},"end":{"line":48,"column":39,"offset":1764},"indent":[2,2,2]}}],"position":{"start":{"line":44,"column":1,"offset":1512},"end":{"line":48,"column":39,"offset":1764},"indent":[1,1,1,1]}}],"position":{"start":{"line":41,"column":1,"offset":1323},"end":{"line":48,"column":39,"offset":1764},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Synchronicity happens like 1->2->3->4. There’s an order to events. Synchronous tells the user to do something and then gets input. Asynch gets input and does something.","position":{"start":{"line":50,"column":1,"offset":1766},"end":{"line":50,"column":169,"offset":1934},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1766},"end":{"line":50,"column":169,"offset":1934},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Asynchronous Controllers","position":{"start":{"line":52,"column":1,"offset":1936},"end":{"line":52,"column":25,"offset":1960},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1936},"end":{"line":52,"column":25,"offset":1960},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Controller gets control when external input is given","position":{"start":{"line":54,"column":3,"offset":1964},"end":{"line":54,"column":55,"offset":2016},"indent":[]}}],"position":{"start":{"line":54,"column":3,"offset":1964},"end":{"line":54,"column":55,"offset":2016},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1962},"end":{"line":54,"column":55,"offset":2016},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Controller methods are called as a response to external input","position":{"start":{"line":55,"column":3,"offset":2019},"end":{"line":55,"column":64,"offset":2080},"indent":[]}}],"position":{"start":{"line":55,"column":3,"offset":2019},"end":{"line":55,"column":64,"offset":2080},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":2017},"end":{"line":55,"column":64,"offset":2080},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Such methods in the controller are called callbacks","position":{"start":{"line":56,"column":3,"offset":2083},"end":{"line":56,"column":54,"offset":2134},"indent":[]}}],"position":{"start":{"line":56,"column":3,"offset":2083},"end":{"line":56,"column":54,"offset":2134},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":2081},"end":{"line":56,"column":54,"offset":2134},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"GUI programs typically work this way","position":{"start":{"line":57,"column":3,"offset":2137},"end":{"line":57,"column":39,"offset":2173},"indent":[]}}],"position":{"start":{"line":57,"column":3,"offset":2137},"end":{"line":57,"column":39,"offset":2173},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"User clicks a button, moves the mouse ⇒ a controller method is called","position":{"start":{"line":58,"column":4,"offset":2177},"end":{"line":58,"column":73,"offset":2246},"indent":[]}}],"position":{"start":{"line":58,"column":4,"offset":2177},"end":{"line":58,"column":73,"offset":2246},"indent":[]}}],"position":{"start":{"line":58,"column":2,"offset":2175},"end":{"line":58,"column":73,"offset":2246},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"In OO GUIs, callbacks are often wrapped in classes called listeners","position":{"start":{"line":59,"column":4,"offset":2250},"end":{"line":59,"column":71,"offset":2317},"indent":[]}}],"position":{"start":{"line":59,"column":4,"offset":2250},"end":{"line":59,"column":71,"offset":2317},"indent":[]}}],"position":{"start":{"line":59,"column":2,"offset":2248},"end":{"line":59,"column":71,"offset":2317},"indent":[]}}],"position":{"start":{"line":58,"column":2,"offset":2175},"end":{"line":59,"column":71,"offset":2317},"indent":[2]}}],"position":{"start":{"line":57,"column":1,"offset":2135},"end":{"line":59,"column":71,"offset":2317},"indent":[1,1]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Look at MVCExample code","position":{"start":{"line":60,"column":3,"offset":2320},"end":{"line":60,"column":26,"offset":2343},"indent":[]}}],"position":{"start":{"line":60,"column":3,"offset":2320},"end":{"line":60,"column":26,"offset":2343},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":2318},"end":{"line":60,"column":26,"offset":2343},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1962},"end":{"line":60,"column":26,"offset":2343},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In most Java projects, the ","position":{"start":{"line":62,"column":1,"offset":2345},"end":{"line":62,"column":28,"offset":2372},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"main","position":{"start":{"line":62,"column":30,"offset":2374},"end":{"line":62,"column":34,"offset":2378},"indent":[]}}],"position":{"start":{"line":62,"column":28,"offset":2372},"end":{"line":62,"column":36,"offset":2380},"indent":[]}},{"type":"text","value":" method creates everything. For example: ","position":{"start":{"line":62,"column":36,"offset":2380},"end":{"line":62,"column":77,"offset":2421},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2345},"end":{"line":62,"column":77,"offset":2421},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainRunner</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     <span class=\"token class-name\">IModel</span> theModel <span class=\"token operator\">=</span> <span class=\"token function\">makeAModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token class-name\">IView</span> aView <span class=\"token operator\">=</span> <span class=\"token function\">makeAView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token class-name\">IController</span> theController <span class=\"token operator\">=</span> <span class=\"token function\">makeController</span><span class=\"token punctuation\">(</span>theModel<span class=\"token punctuation\">,</span> aView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     theController<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":64,"column":1,"offset":2423},"end":{"line":73,"column":4,"offset":2672},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"How do we show output? The simplest way is to just use ","position":{"start":{"line":75,"column":1,"offset":2674},"end":{"line":75,"column":56,"offset":2729},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"System.out.print","position":{"start":{"line":75,"column":58,"offset":2731},"end":{"line":75,"column":74,"offset":2747},"indent":[]}}],"position":{"start":{"line":75,"column":56,"offset":2729},"end":{"line":75,"column":76,"offset":2749},"indent":[]}},{"type":"text","value":". To get input we use a ","position":{"start":{"line":75,"column":76,"offset":2749},"end":{"line":75,"column":100,"offset":2773},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Scanner","position":{"start":{"line":75,"column":102,"offset":2775},"end":{"line":75,"column":109,"offset":2782},"indent":[]}}],"position":{"start":{"line":75,"column":100,"offset":2773},"end":{"line":75,"column":111,"offset":2784},"indent":[]}},{"type":"text","value":". Now we’re going an in class example. ","position":{"start":{"line":75,"column":111,"offset":2784},"end":{"line":75,"column":150,"offset":2823},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2674},"end":{"line":75,"column":150,"offset":2823},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SimpleCalc1</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Scanner</span> scan <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    num1 <span class=\"token operator\">=</span> scan<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    num2 <span class=\"token operator\">=</span> scan<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":77,"column":1,"offset":2825},"end":{"line":87,"column":4,"offset":3072},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Let’s turn this into an MVC example:","position":{"start":{"line":89,"column":1,"offset":3074},"end":{"line":89,"column":37,"offset":3110},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":3074},"end":{"line":89,"column":37,"offset":3110},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SimpleCalc2</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Scanner</span> scan <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    num1 <span class=\"token operator\">=</span> scan<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    num2 <span class=\"token operator\">=</span> scan<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Calculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":91,"column":1,"offset":3112},"end":{"line":107,"column":4,"offset":3469},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Let’s add a controller:","position":{"start":{"line":109,"column":1,"offset":3471},"end":{"line":109,"column":24,"offset":3494},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":3471},"end":{"line":109,"column":24,"offset":3494},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SimpleCalc1</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Calculator</span> model <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Calculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">CalcController</span> controller <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CalcController</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    controller<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CalcController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Calculator</span> model<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">CalcController</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calculator</span> model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> model<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Scanner</span> scan <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter a number: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    num1 <span class=\"token operator\">=</span> scan<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter another number: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    num2 <span class=\"token operator\">=</span> scan<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The answer is: %d\"</span><span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Calculator</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> num1<span class=\"token operator\">+</span>num2<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":111,"column":1,"offset":3496},"end":{"line":140,"column":4,"offset":4223},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now we’re running into issues with testing. How do you test something that takes input and output? We need to set a ","position":{"start":{"line":142,"column":1,"offset":4225},"end":{"line":142,"column":117,"offset":4341},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"System.in","position":{"start":{"line":142,"column":119,"offset":4343},"end":{"line":142,"column":128,"offset":4352},"indent":[]}}],"position":{"start":{"line":142,"column":117,"offset":4341},"end":{"line":142,"column":130,"offset":4354},"indent":[]}},{"type":"text","value":" and a ","position":{"start":{"line":142,"column":130,"offset":4354},"end":{"line":142,"column":137,"offset":4361},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"System.out","position":{"start":{"line":142,"column":139,"offset":4363},"end":{"line":142,"column":149,"offset":4373},"indent":[]}}],"position":{"start":{"line":142,"column":137,"offset":4361},"end":{"line":142,"column":151,"offset":4375},"indent":[]}},{"type":"text","value":". In order to make this work we add an input stream and output stream property to our class:","position":{"start":{"line":142,"column":151,"offset":4375},"end":{"line":142,"column":243,"offset":4467},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":4225},"end":{"line":142,"column":243,"offset":4467},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CalcController</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">Calculator</span> model<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">InputStream</span> input<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">OutputStream</span> output<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">CalcController</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calculator</span> model<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> model<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>output <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">CalcController</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Calculator</span> model<span class=\"token punctuation\">,</span> <span class=\"token class-name\">InputStream</span> input<span class=\"token punctuation\">,</span> <span class=\"token class-name\">OutputStream</span> output<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>model <span class=\"token operator\">=</span> model<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input <span class=\"token operator\">=</span> input<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>output <span class=\"token operator\">=</span> output<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  \t  <span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">;</span>\n  \t  <span class=\"token class-name\">Scanner</span> scan <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \t  output<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter a number: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \t  num1 <span class=\"token operator\">=</span> scan<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \t  output<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter another number: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \t  num2 <span class=\"token operator\">=</span> scan<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \t  output<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The answer is: %d\"</span><span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":144,"column":1,"offset":4469},"end":{"line":172,"column":4,"offset":5189},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now for the test:","position":{"start":{"line":174,"column":1,"offset":5191},"end":{"line":174,"column":18,"offset":5208},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":5191},"end":{"line":174,"column":18,"offset":5208},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CalcControllerTest</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token annotation punctuation\">@Test</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Calculator</span> model <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Calculator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">ByteArrayOutputStream</span> baos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ByteArrayOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">PrintStream</span> printStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PrintStream</span><span class=\"token punctuation\">(</span>baos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">ByteArrayInputStream</span> byteArrayInputStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ByteArrayInputStream</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"6\\n 8\\n\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">CalcController</span> controller <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CalcController</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> byteArrayInputStream<span class=\"token punctuation\">,</span> printStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    controller<span class=\"token punctuation\">.</span><span class=\"token function\">go</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span>baos<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Enter a number: \\n\"</span>\n            <span class=\"token operator\">+</span> <span class=\"token string\">\"Enter another number: \\n\"</span>\n            <span class=\"token operator\">+</span> <span class=\"token string\">\"The answer is: 14\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":176,"column":1,"offset":5210},"end":{"line":192,"column":4,"offset":5808},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":208,"column":1,"offset":5824}}}}