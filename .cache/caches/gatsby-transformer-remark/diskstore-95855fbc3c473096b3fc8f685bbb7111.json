{"expireTime":9007200815366031000,"key":"transformer-remark-markdown-ast-348b634244231e363c37f0981c3c6de8-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Hello! Per request of a friendly reddit user, I’m going to be doing a quick tutorial on using firebase with swift and how to structure your data models. Before we do anything, just a quick disclaimer, this tutorial is in swift 3, which, even though my life would be made much easier had I used swift 4 (google codeable swift 4), is the current default.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":353,"offset":353},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":353,"offset":353},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Basic project setup:","position":{"start":{"line":4,"column":1,"offset":355},"end":{"line":4,"column":21,"offset":375},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":355},"end":{"line":4,"column":21,"offset":375},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Single page application default in XCode","position":{"start":{"line":6,"column":3,"offset":379},"end":{"line":6,"column":43,"offset":419},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":379},"end":{"line":6,"column":43,"offset":419},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":377},"end":{"line":6,"column":43,"offset":419},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Cocoapods to install Firebase","position":{"start":{"line":7,"column":3,"offset":422},"end":{"line":7,"column":32,"offset":451},"indent":[]}}],"position":{"start":{"line":7,"column":3,"offset":422},"end":{"line":7,"column":32,"offset":451},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":420},"end":{"line":7,"column":32,"offset":451},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":377},"end":{"line":7,"column":32,"offset":451},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"You’ll be able to find the project’s link at the end of this guide.","position":{"start":{"line":9,"column":1,"offset":453},"end":{"line":9,"column":68,"offset":520},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":453},"end":{"line":9,"column":68,"offset":520},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This app is going to be dumb simple:","position":{"start":{"line":11,"column":1,"offset":522},"end":{"line":11,"column":37,"offset":558},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":522},"end":{"line":11,"column":37,"offset":558},"indent":[]}},{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A list of items","position":{"start":{"line":13,"column":3,"offset":562},"end":{"line":13,"column":18,"offset":577},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":562},"end":{"line":13,"column":18,"offset":577},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":560},"end":{"line":13,"column":18,"offset":577},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Click on item to view info or delete","position":{"start":{"line":14,"column":3,"offset":580},"end":{"line":14,"column":39,"offset":616},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":580},"end":{"line":14,"column":39,"offset":616},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":578},"end":{"line":14,"column":39,"offset":616},"indent":[]}},{"type":"listItem","loose":false,"checked":null,"children":[{"type":"list","ordered":false,"start":null,"loose":false,"children":[{"type":"listItem","loose":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"button in the top corner to add one","position":{"start":{"line":15,"column":5,"offset":621},"end":{"line":15,"column":40,"offset":656},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":621},"end":{"line":15,"column":40,"offset":656},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":619},"end":{"line":15,"column":40,"offset":656},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":619},"end":{"line":15,"column":40,"offset":656},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":617},"end":{"line":15,"column":40,"offset":656},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":560},"end":{"line":15,"column":40,"offset":656},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The first piece of code for this pattern is a simple protocol:","position":{"start":{"line":17,"column":1,"offset":658},"end":{"line":17,"column":63,"offset":720},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":658},"end":{"line":17,"column":63,"offset":720},"indent":[]}},{"type":"html","lang":"swift","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">protocol</span> <span class=\"token builtin\">FirebaseItem</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> id<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span> <span class=\"token keyword\">set</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">String</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">AnyObject</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>fromFirebaseItem<span class=\"token punctuation\">:</span> <span class=\"token builtin\">FIRDataSnapshot</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":19,"column":1,"offset":722},"end":{"line":26,"column":4,"offset":910},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For the most part every firebase item we’ll have will have an ID and a name. Very simply, every item we construct needs to be able to produce a JSON object, and must be able to be constructed from a firebase item.","position":{"start":{"line":28,"column":1,"offset":912},"end":{"line":28,"column":214,"offset":1125},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":912},"end":{"line":28,"column":214,"offset":1125},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Following Firebase’s standards we’re going to avoid nesting our data, and keep it very simple.","position":{"start":{"line":30,"column":1,"offset":1127},"end":{"line":30,"column":95,"offset":1221},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1127},"end":{"line":30,"column":95,"offset":1221},"indent":[]}},{"type":"html","lang":"JSON","value":"<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"items\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"first\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"first\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Apple\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"price\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"second\"</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"id\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"second\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"name\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Banana\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"price\"</span> <span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":32,"column":1,"offset":1223},"end":{"line":47,"column":4,"offset":1433},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now that that’s working, let’s setup the class that’s going to get our data","position":{"start":{"line":49,"column":1,"offset":1435},"end":{"line":49,"column":76,"offset":1510},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1435},"end":{"line":49,"column":76,"offset":1510},"indent":[]}},{"type":"html","lang":"swift","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">FirebaseInitialization</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> childRef<span class=\"token punctuation\">:</span> <span class=\"token builtin\">FIRDatabaseReference</span><span class=\"token operator\">!</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> items<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">FirebaseItem</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    \n    <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> ref <span class=\"token operator\">=</span> <span class=\"token builtin\">FIRDatabase</span><span class=\"token punctuation\">.</span><span class=\"token function\">database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reference</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        childRef <span class=\"token operator\">=</span> ref<span class=\"token punctuation\">.</span><span class=\"token function\">child</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"items\"</span><span class=\"token punctuation\">)</span>\n        \n        <span class=\"token keyword\">let</span> addFunc <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">:</span><span class=\"token builtin\">FIRDataSnapshot</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n            <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">GroceryItem</span><span class=\"token punctuation\">(</span>fromFirebaseItem<span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">let</span> removeFunc <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">:</span> <span class=\"token builtin\">FIRDataSnapshot</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n            <span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">where</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Bool</span> <span class=\"token keyword\">in</span>\n                item<span class=\"token punctuation\">.</span>id <span class=\"token operator\">==</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span>forKey<span class=\"token punctuation\">:</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span><span class=\"token operator\">!</span> <span class=\"token builtin\">String</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>at<span class=\"token punctuation\">:</span> index<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        childRef<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">FIRDataEventType</span><span class=\"token punctuation\">.</span>childAdded<span class=\"token punctuation\">,</span> with<span class=\"token punctuation\">:</span> addFunc<span class=\"token punctuation\">)</span>\n        childRef<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">FIRDataEventType</span><span class=\"token punctuation\">.</span>childRemoved<span class=\"token punctuation\">,</span> with<span class=\"token punctuation\">:</span> removeFunc<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">func</span> <span class=\"token function\">getItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">FirebaseItem</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> items\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":51,"column":1,"offset":1512},"end":{"line":77,"column":4,"offset":2367},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Again, very simple: we connect to the database and setup the things that will automatically add and remove from our internal list. Finally let’s look at our UITableViewController","position":{"start":{"line":79,"column":1,"offset":2369},"end":{"line":79,"column":179,"offset":2547},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":2369},"end":{"line":79,"column":179,"offset":2547},"indent":[]}},{"type":"html","lang":"swift","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">GroceryListTableViewController</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">UITableViewController</span> <span class=\"token punctuation\">{</span>\n    \n    <span class=\"token keyword\">var</span> firebase<span class=\"token punctuation\">:</span> <span class=\"token builtin\">FirebaseInitialization</span><span class=\"token operator\">?</span>\n    <span class=\"token keyword\">var</span> items<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">FirebaseItem</span><span class=\"token punctuation\">]</span><span class=\"token operator\">?</span>\n    \n    \n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">viewDidLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">viewDidLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        \n        firebase <span class=\"token operator\">=</span> <span class=\"token function\">FirebaseInitialization</span><span class=\"token punctuation\">(</span>delegate<span class=\"token punctuation\">:</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">)</span>\n        items <span class=\"token operator\">=</span> firebase<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">getItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">didReceiveMemoryWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">didReceiveMemoryWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// MARK: - Table view data source</span>\n\n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">numberOfSections</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">in</span> tableView<span class=\"token punctuation\">:</span> <span class=\"token builtin\">UITableView</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Int</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// #warning Incomplete implementation, return the number of sections</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">tableView</span><span class=\"token punctuation\">(</span><span class=\"token number\">_</span> tableView<span class=\"token punctuation\">:</span> <span class=\"token builtin\">UITableView</span><span class=\"token punctuation\">,</span> numberOfRowsInSection section<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Int</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> items<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">count</span>\n    <span class=\"token punctuation\">}</span>\n\n    \n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">tableView</span><span class=\"token punctuation\">(</span><span class=\"token number\">_</span> tableView<span class=\"token punctuation\">:</span> <span class=\"token builtin\">UITableView</span><span class=\"token punctuation\">,</span> cellForRowAt indexPath<span class=\"token punctuation\">:</span> <span class=\"token builtin\">IndexPath</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">UITableViewCell</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> cell <span class=\"token operator\">=</span> tableView<span class=\"token punctuation\">.</span><span class=\"token function\">dequeueReusableCell</span><span class=\"token punctuation\">(</span>withIdentifier<span class=\"token punctuation\">:</span> <span class=\"token string\">\"groceryItem\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">for</span><span class=\"token punctuation\">:</span> indexPath<span class=\"token punctuation\">)</span>\n        cell<span class=\"token punctuation\">.</span>textLabel<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> items<span class=\"token operator\">!</span><span class=\"token punctuation\">[</span>indexPath<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name\n        <span class=\"token keyword\">return</span> cell\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">tableView</span><span class=\"token punctuation\">(</span><span class=\"token number\">_</span> tableView<span class=\"token punctuation\">:</span> <span class=\"token builtin\">UITableView</span><span class=\"token punctuation\">,</span> didSelectRowAt indexPath<span class=\"token punctuation\">:</span> <span class=\"token builtin\">IndexPath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>items<span class=\"token operator\">?</span><span class=\"token punctuation\">[</span>indexPath<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        tableView<span class=\"token punctuation\">.</span><span class=\"token function\">deselectRow</span><span class=\"token punctuation\">(</span>at<span class=\"token punctuation\">:</span> indexPath<span class=\"token punctuation\">,</span> animated<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":81,"column":1,"offset":2549},"end":{"line":124,"column":4,"offset":3829},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now we initialize our firebase class, and set the list of items. What’s very important is that we reload our data when we get new data. With Async behavior this step is very important.","position":{"start":{"line":126,"column":1,"offset":3831},"end":{"line":126,"column":185,"offset":4015},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":3831},"end":{"line":126,"column":185,"offset":4015},"indent":[]}},{"type":"html","lang":"swift","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">protocol</span> <span class=\"token builtin\">FirebaseTableDelegate</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function\">reloadData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":128,"column":1,"offset":4017},"end":{"line":132,"column":4,"offset":4087},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It’s very easy to do this with the delegate pattern.","position":{"start":{"line":134,"column":1,"offset":4089},"end":{"line":134,"column":53,"offset":4141},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":4089},"end":{"line":134,"column":53,"offset":4141},"indent":[]}},{"type":"html","lang":"swift","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">FirebaseInitialization</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> childRef<span class=\"token punctuation\">:</span> <span class=\"token builtin\">FIRDatabaseReference</span><span class=\"token operator\">!</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> items<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">FirebaseItem</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">let</span> delegate<span class=\"token punctuation\">:</span> <span class=\"token builtin\">FirebaseTableDelegate</span>\n    \n    <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>delegate<span class=\"token punctuation\">:</span> <span class=\"token builtin\">FirebaseTableDelegate</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>delegate <span class=\"token operator\">=</span> delegate\n        <span class=\"token keyword\">let</span> ref <span class=\"token operator\">=</span> <span class=\"token builtin\">FIRDatabase</span><span class=\"token punctuation\">.</span><span class=\"token function\">database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reference</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        childRef <span class=\"token operator\">=</span> ref<span class=\"token punctuation\">.</span><span class=\"token function\">child</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"items\"</span><span class=\"token punctuation\">)</span>\n        \n        <span class=\"token keyword\">let</span> addFunc <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">:</span><span class=\"token builtin\">FIRDataSnapshot</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n            <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">GroceryItem</span><span class=\"token punctuation\">(</span>fromFirebaseItem<span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            delegate<span class=\"token punctuation\">.</span><span class=\"token function\">reloadData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">let</span> removeFunc <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">:</span> <span class=\"token builtin\">FIRDataSnapshot</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n            <span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">where</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Bool</span> <span class=\"token keyword\">in</span>\n                item<span class=\"token punctuation\">.</span>id <span class=\"token operator\">==</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span>forKey<span class=\"token punctuation\">:</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span><span class=\"token operator\">!</span> <span class=\"token builtin\">String</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>at<span class=\"token punctuation\">:</span> index<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span>\n            delegate<span class=\"token punctuation\">.</span><span class=\"token function\">reloadData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        childRef<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">FIRDataEventType</span><span class=\"token punctuation\">.</span>childAdded<span class=\"token punctuation\">,</span> with<span class=\"token punctuation\">:</span> addFunc<span class=\"token punctuation\">)</span>\n        childRef<span class=\"token punctuation\">.</span><span class=\"token function\">observe</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">FIRDataEventType</span><span class=\"token punctuation\">.</span>childRemoved<span class=\"token punctuation\">,</span> with<span class=\"token punctuation\">:</span> removeFunc<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">func</span> <span class=\"token function\">getItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">FirebaseItem</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> items\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":136,"column":1,"offset":4143},"end":{"line":166,"column":4,"offset":5178},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"and finally:","position":{"start":{"line":169,"column":1,"offset":5181},"end":{"line":169,"column":13,"offset":5193},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":5181},"end":{"line":169,"column":13,"offset":5193},"indent":[]}},{"type":"html","lang":"swift","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">extension</span> <span class=\"token builtin\">GroceryListTableViewController</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">FirebaseTableDelegate</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function\">reloadData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        items <span class=\"token operator\">=</span> firebase<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">getItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>tableView<span class=\"token punctuation\">.</span><span class=\"token function\">reloadData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":171,"column":1,"offset":5195},"end":{"line":178,"column":4,"offset":5379},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now automatically, every time an item is added or removed from our database the tableview will automatically reload. For a small application like this, this pattern is perfect; very extendable and very easy to understand. Now let’s see how easy it is to add a new item.","position":{"start":{"line":180,"column":1,"offset":5381},"end":{"line":180,"column":270,"offset":5650},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":5381},"end":{"line":180,"column":270,"offset":5650},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First, in our table view controller","position":{"start":{"line":182,"column":1,"offset":5652},"end":{"line":182,"column":36,"offset":5687},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":5652},"end":{"line":182,"column":36,"offset":5687},"indent":[]}},{"type":"html","lang":"swift","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">    <span class=\"token atrule\">@IBAction</span> <span class=\"token keyword\">func</span> <span class=\"token function\">addItem</span><span class=\"token punctuation\">(</span><span class=\"token number\">_</span> sender<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Any</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> alert <span class=\"token operator\">=</span> <span class=\"token function\">UIAlertController</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Add Item\"</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Add an item to grocery list\"</span><span class=\"token punctuation\">,</span> preferredStyle<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>alert<span class=\"token punctuation\">)</span>\n        \n        alert<span class=\"token punctuation\">.</span>addTextField <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>textField<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n            textField<span class=\"token punctuation\">.</span>placeholder <span class=\"token operator\">=</span> <span class=\"token string\">\"Name\"</span>\n        <span class=\"token punctuation\">}</span>\n        \n        alert<span class=\"token punctuation\">.</span>addTextField <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>textField<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n            textField<span class=\"token punctuation\">.</span>placeholder <span class=\"token operator\">=</span> <span class=\"token string\">\"Price\"</span>\n            textField<span class=\"token punctuation\">.</span>keyboardType <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span>decimalPad\n        <span class=\"token punctuation\">}</span>\n        alert<span class=\"token punctuation\">.</span><span class=\"token function\">addAction</span><span class=\"token punctuation\">(</span><span class=\"token function\">UIAlertAction</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Add\"</span><span class=\"token punctuation\">,</span> style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span><span class=\"token keyword\">default</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">weak</span> alert<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span><span class=\"token number\">_</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n            <span class=\"token keyword\">let</span> nameTextField <span class=\"token operator\">=</span> alert<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>textFields<span class=\"token operator\">!</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">let</span> priceTextField <span class=\"token operator\">=</span> alert<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>textFields<span class=\"token operator\">!</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">let</span> price <span class=\"token operator\">=</span> <span class=\"token function\">Double</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>priceTextField<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">let</span> uuid <span class=\"token operator\">=</span> <span class=\"token function\">UUID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>uuidString\n            <span class=\"token keyword\">let</span> item <span class=\"token operator\">=</span> <span class=\"token function\">GroceryItem</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">:</span> uuid<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>nameTextField<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">:</span> price<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>firebase<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">addItem</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">:</span> item<span class=\"token punctuation\">)</span>\n            \n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        alert<span class=\"token punctuation\">.</span><span class=\"token function\">addAction</span><span class=\"token punctuation\">(</span><span class=\"token function\">UIAlertAction</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Cancel\"</span><span class=\"token punctuation\">,</span> style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">.</span>cancel<span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cancel\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">present</span><span class=\"token punctuation\">(</span>alert<span class=\"token punctuation\">,</span> animated<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n            <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"done\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":184,"column":1,"offset":5689},"end":{"line":212,"column":4,"offset":6815},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"And lastly in FirebaseInitialization","position":{"start":{"line":214,"column":1,"offset":6817},"end":{"line":214,"column":37,"offset":6853},"indent":[]}}],"position":{"start":{"line":214,"column":1,"offset":6817},"end":{"line":214,"column":37,"offset":6853},"indent":[]}},{"type":"html","lang":"swift","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">    <span class=\"token keyword\">func</span> <span class=\"token function\">addItem</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">:</span> <span class=\"token builtin\">FirebaseItem</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        childRef<span class=\"token punctuation\">.</span><span class=\"token function\">child</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span><span class=\"token function\">toJSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":216,"column":1,"offset":6855},"end":{"line":220,"column":4,"offset":6969},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As you can see it’s incredibely easy to implement this if you wanted to create a new class. What’s also useful is that there are no strong ties to firebase from the table view. Please let me know what you think on reddit!","position":{"start":{"line":223,"column":1,"offset":6972},"end":{"line":223,"column":222,"offset":7193},"indent":[]}}],"position":{"start":{"line":223,"column":1,"offset":6972},"end":{"line":223,"column":222,"offset":7193},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"UPDATE","position":{"start":{"line":225,"column":1,"offset":7195},"end":{"line":225,"column":7,"offset":7201},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":7195},"end":{"line":225,"column":7,"offset":7201},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"code to remove items: ","position":{"start":{"line":227,"column":1,"offset":7203},"end":{"line":227,"column":23,"offset":7225},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":7203},"end":{"line":227,"column":23,"offset":7225},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In our FirebaseInitialization class","position":{"start":{"line":229,"column":1,"offset":7227},"end":{"line":229,"column":36,"offset":7262},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":7227},"end":{"line":229,"column":36,"offset":7262},"indent":[]}},{"type":"html","lang":"swift","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> removeFunc <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">:</span> <span class=\"token builtin\">FIRDataSnapshot</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n            <span class=\"token keyword\">let</span> index <span class=\"token operator\">=</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">where</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Bool</span> <span class=\"token keyword\">in</span>\n                <span class=\"token keyword\">let</span> properties <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>value <span class=\"token keyword\">as</span><span class=\"token operator\">?</span> <span class=\"token builtin\">NSDictionary</span>\n                <span class=\"token keyword\">return</span> item<span class=\"token punctuation\">.</span>id <span class=\"token operator\">==</span> properties<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span>forKey<span class=\"token punctuation\">:</span> <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span><span class=\"token operator\">!</span> <span class=\"token builtin\">String</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>at<span class=\"token punctuation\">:</span> index<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span>\n            delegate<span class=\"token punctuation\">.</span><span class=\"token function\">reloadData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":231,"column":1,"offset":7264},"end":{"line":240,"column":4,"offset":7630},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"html","lang":"swift","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    childRef<span class=\"token punctuation\">.</span><span class=\"token function\">child</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":242,"column":1,"offset":7632},"end":{"line":246,"column":4,"offset":7714},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"And in our UITableViewController","position":{"start":{"line":248,"column":1,"offset":7716},"end":{"line":248,"column":33,"offset":7748},"indent":[]}}],"position":{"start":{"line":248,"column":1,"offset":7716},"end":{"line":248,"column":33,"offset":7748},"indent":[]}},{"type":"html","lang":"swift","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">tableView</span><span class=\"token punctuation\">(</span><span class=\"token number\">_</span> tableView<span class=\"token punctuation\">:</span> <span class=\"token builtin\">UITableView</span><span class=\"token punctuation\">,</span> commit editingStyle<span class=\"token punctuation\">:</span> <span class=\"token builtin\">UITableViewCellEditingStyle</span><span class=\"token punctuation\">,</span> forRowAt indexPath<span class=\"token punctuation\">:</span> <span class=\"token builtin\">IndexPath</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> editingStyle <span class=\"token operator\">==</span> <span class=\"token punctuation\">.</span>delete <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> groceryItem <span class=\"token operator\">=</span> items<span class=\"token operator\">?</span><span class=\"token punctuation\">[</span>indexPath<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>firebase<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>groceryItem<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token operator\">!</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":250,"column":1,"offset":7750},"end":{"line":258,"column":4,"offset":8044},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As you can see adding functionality is quite simple.","position":{"start":{"line":260,"column":1,"offset":8046},"end":{"line":260,"column":53,"offset":8098},"indent":[]}}],"position":{"start":{"line":260,"column":1,"offset":8046},"end":{"line":260,"column":53,"offset":8098},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"UPDATE 2:","position":{"start":{"line":262,"column":1,"offset":8100},"end":{"line":262,"column":10,"offset":8109},"indent":[]}}],"position":{"start":{"line":262,"column":1,"offset":8100},"end":{"line":262,"column":10,"offset":8109},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Models within models","position":{"start":{"line":264,"column":1,"offset":8111},"end":{"line":264,"column":21,"offset":8131},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":8111},"end":{"line":264,"column":21,"offset":8131},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you have json within json, as long as that piece of data implements the ","position":{"start":{"line":266,"column":1,"offset":8133},"end":{"line":266,"column":76,"offset":8208},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">FirebaseItem</code>","position":{"start":{"line":266,"column":76,"offset":8208},"end":{"line":266,"column":90,"offset":8222},"indent":[]}},{"type":"text","value":" protocol, all you have to do is call the ","position":{"start":{"line":266,"column":90,"offset":8222},"end":{"line":266,"column":132,"offset":8264},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">getJSON()</code>","position":{"start":{"line":266,"column":132,"offset":8264},"end":{"line":266,"column":143,"offset":8275},"indent":[]}},{"type":"text","value":" method. Because of the type system, this simple approach allows us to do whatever we want. What’s also great about this is that if you have a sub model that then has another object within it, all you have to do is call that item’s ","position":{"start":{"line":266,"column":143,"offset":8275},"end":{"line":266,"column":375,"offset":8507},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">getJSON()</code>","position":{"start":{"line":266,"column":375,"offset":8507},"end":{"line":266,"column":386,"offset":8518},"indent":[]}},{"type":"text","value":" method within that sub-model’s method.","position":{"start":{"line":266,"column":386,"offset":8518},"end":{"line":266,"column":425,"offset":8557},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":8133},"end":{"line":266,"column":425,"offset":8557},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/jaronoff97/FirebasePlayground/tree/data_modeling","children":[{"type":"text","value":"github","position":{"start":{"line":270,"column":2,"offset":8562},"end":{"line":270,"column":8,"offset":8568},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":8561},"end":{"line":270,"column":78,"offset":8638},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":8561},"end":{"line":270,"column":78,"offset":8638},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":289,"column":1,"offset":8657}}}}