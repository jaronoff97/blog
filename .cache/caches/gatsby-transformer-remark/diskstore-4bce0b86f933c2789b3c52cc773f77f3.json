{"expireTime":9007200815377754000,"key":"transformer-remark-markdown-ast-30eb885f995e1d0c9eb17828b903a7f1-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"link","url":"#connecting-to-the-internet-with-java","title":null,"data":{"hProperties":{"aria-label":"connecting to the internet with java permalink","class":"anchor"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Connecting to the internet with Java","position":{"start":{"line":1,"column":4,"offset":3},"end":{"line":1,"column":40,"offset":39},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":40,"offset":39},"indent":[]},"data":{"id":"connecting-to-the-internet-with-java","htmlAttributes":{"id":"connecting-to-the-internet-with-java"},"hProperties":{"id":"connecting-to-the-internet-with-java"}}},{"type":"paragraph","children":[{"type":"text","value":"Hello and welcome to my first Java tutorial. This is going to be my only text-based Java tutorial, the others will be videos. In this tutorial we’re going to go over how to make a URL request in Java. ","position":{"start":{"line":3,"column":1,"offset":41},"end":{"line":3,"column":202,"offset":242},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":41},"end":{"line":3,"column":202,"offset":242},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First we’re going to make a class named FrameLayoutURLReader, this class will ","position":{"start":{"line":7,"column":1,"offset":246},"end":{"line":7,"column":79,"offset":324},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"extend","position":{"start":{"line":7,"column":81,"offset":326},"end":{"line":7,"column":87,"offset":332},"indent":[]}}],"position":{"start":{"line":7,"column":79,"offset":324},"end":{"line":7,"column":89,"offset":334},"indent":[]}},{"type":"text","value":" JFrame and ","position":{"start":{"line":7,"column":89,"offset":334},"end":{"line":7,"column":101,"offset":346},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"implement","position":{"start":{"line":7,"column":103,"offset":348},"end":{"line":7,"column":112,"offset":357},"indent":[]}}],"position":{"start":{"line":7,"column":101,"offset":346},"end":{"line":7,"column":114,"offset":359},"indent":[]}},{"type":"text","value":" ActionListener. By inheriting from JFrame, we make this program an application whose layout will be swing/ frame based. By implementing actionlistener, we can attach listeners to buttons so that we can do something on a click. ","position":{"start":{"line":7,"column":114,"offset":359},"end":{"line":7,"column":342,"offset":587},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":246},"end":{"line":7,"column":342,"offset":587},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FrameLayoutURLReader</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">JFrame</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">ActionListener</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">FrameLayoutURLReader</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">actionPerformed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ActionEvent</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":9,"column":1,"offset":589},"end":{"line":21,"column":4,"offset":833},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In our ","position":{"start":{"line":23,"column":1,"offset":835},"end":{"line":23,"column":8,"offset":842},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"main","position":{"start":{"line":23,"column":10,"offset":844},"end":{"line":23,"column":14,"offset":848},"indent":[]}}],"position":{"start":{"line":23,"column":8,"offset":842},"end":{"line":23,"column":16,"offset":850},"indent":[]}},{"type":"text","value":" lets construct a new instance of a FrameLayoutURLReader.","position":{"start":{"line":23,"column":16,"offset":850},"end":{"line":23,"column":73,"offset":907},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":835},"end":{"line":23,"column":73,"offset":907},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">FrameLayoutURLReader</span> application <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FrameLayoutURLReader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Get URL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// construct a new instance</span>\n      application<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// resize the frame</span>\n      application<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// show the frame</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":25,"column":1,"offset":909},"end":{"line":31,"column":4,"offset":1166},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"All we’re doing here is making a new instance of itself, resizing it, and showing it. Now let’s think about what we want this to look like. If we’re thinking early 00’s browser, it should just have a place to type a URL and a button to go to that URL. In the center we’ll display whatever HTML that URL returns. It should look something like this:","position":{"start":{"line":33,"column":1,"offset":1168},"end":{"line":33,"column":348,"offset":1515},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1168},"end":{"line":33,"column":348,"offset":1515},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{% gist cfb17a893257c90506e0f54a62fb7229 %}","position":{"start":{"line":35,"column":1,"offset":1517},"end":{"line":35,"column":44,"offset":1560},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1517},"end":{"line":35,"column":44,"offset":1560},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So for our UI componenets we’re going to need a JTextField so the user can input a URL, a JTextArea for us to display the response, a JButton for the user to press Go!, and for aesthetic purposes we’re going to put our JTextArea inside of a JScrollPane, so that we can see all of the html. Here’s what that looks like in code: ","position":{"start":{"line":37,"column":1,"offset":1562},"end":{"line":37,"column":328,"offset":1889},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1562},"end":{"line":37,"column":328,"offset":1889},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">   <span class=\"token keyword\">public</span> <span class=\"token class-name\">JTextField</span> urlTextField <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JTextField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter a valid URL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Text field for a URL</span>\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">JTextArea</span> urlTextArea <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JTextArea</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Text area for our HTML Code</span>\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">JScrollPane</span> urlScrollTextArea <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JScrollPane</span><span class=\"token punctuation\">(</span>urlTextArea<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Make it so our text area can scroll</span>\n   <span class=\"token keyword\">public</span> <span class=\"token class-name\">JButton</span> go <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JButton</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Go\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Make a button</span></code></pre></div>","position":{"start":{"line":40,"column":1,"offset":1892},"end":{"line":45,"column":4,"offset":2253},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"So now we have to put these components in a layout, if we look back at our diagram: ","position":{"start":{"line":47,"column":1,"offset":2255},"end":{"line":47,"column":85,"offset":2339},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":2255},"end":{"line":47,"column":85,"offset":2339},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{% gist 0bdf57feb43629020de0d1c8dfb323fb %}","position":{"start":{"line":49,"column":1,"offset":2341},"end":{"line":49,"column":44,"offset":2384},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":2341},"end":{"line":49,"column":44,"offset":2384},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"The reason we have a (1,1) GridLayout for our center is so that our scrollpane takes up the entire space. ","position":{"start":{"line":51,"column":3,"offset":2388},"end":{"line":51,"column":109,"offset":2494},"indent":[]}}],"position":{"start":{"line":51,"column":3,"offset":2388},"end":{"line":51,"column":109,"offset":2494},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":2386},"end":{"line":51,"column":109,"offset":2494},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We put the code for this in our constructor so that our layout is ready to go by the time we call ","position":{"start":{"line":53,"column":1,"offset":2496},"end":{"line":53,"column":99,"offset":2594},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"application.show","position":{"start":{"line":53,"column":101,"offset":2596},"end":{"line":53,"column":117,"offset":2612},"indent":[]}}],"position":{"start":{"line":53,"column":99,"offset":2594},"end":{"line":53,"column":119,"offset":2614},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":2496},"end":{"line":53,"column":119,"offset":2614},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">   <span class=\"token keyword\">public</span> <span class=\"token class-name\">FrameLayoutURLReader</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">String</span> title<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">JPanel</span> centerPanel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JPanel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Construct center panel</span>\n      <span class=\"token class-name\">JPanel</span> northPanel <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JPanel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Construct northern panel</span>\n      <span class=\"token comment\">//START CENTER SETUP -------------</span>\n      centerPanel<span class=\"token punctuation\">.</span><span class=\"token function\">setLayout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">GridLayout</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Set layout of center pane to grid layout</span>\n      centerPanel<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>urlScrollTextArea<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//add our scrollable panel to the center</span>\n      <span class=\"token comment\">//END CENTER SETUP -------------</span>\n      <span class=\"token comment\">//START NORTH SETUP -------------</span>\n      northPanel<span class=\"token punctuation\">.</span><span class=\"token function\">setLayout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">GridLayout</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Set layout for one column, two rows</span>\n      go<span class=\"token punctuation\">.</span><span class=\"token function\">addActionListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//add the action listener</span>\n      northPanel<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>urlTextField<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//We want the text field to be on the left so we add it first</span>\n      northPanel<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>go<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//add the go button</span>\n      <span class=\"token comment\">//END NORTH SETUP -------------</span>\n      <span class=\"token comment\">//Finaly put all the panels onto the Applet panel.</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setLayout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BorderLayout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//We want it in a border layout</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Center\"</span><span class=\"token punctuation\">,</span> centerPanel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Set centerpanel as the center</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"North\"</span><span class=\"token punctuation\">,</span> northPanel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Set northpanel as the north</span>\n   <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":55,"column":1,"offset":2616},"end":{"line":75,"column":4,"offset":3719},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"So now that we’ve made our layout and added our actionlistener to our button, we’re ready to begin our URL parsing. First, let’s make a method called ","position":{"start":{"line":77,"column":1,"offset":3721},"end":{"line":77,"column":151,"offset":3871},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"readURL","position":{"start":{"line":77,"column":153,"offset":3873},"end":{"line":77,"column":160,"offset":3880},"indent":[]}}],"position":{"start":{"line":77,"column":151,"offset":3871},"end":{"line":77,"column":162,"offset":3882},"indent":[]}},{"type":"text","value":" which will be called in our actionPerformed.","position":{"start":{"line":77,"column":162,"offset":3882},"end":{"line":77,"column":207,"offset":3927},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":3721},"end":{"line":77,"column":207,"offset":3927},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span>  actionPerformed <span class=\"token punctuation\">(</span><span class=\"token class-name\">ActionEvent</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">readURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//This will be called when we press the go button</span>\n   <span class=\"token punctuation\">}</span>   <span class=\"token comment\">// end of Action Performed</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":79,"column":1,"offset":3929},"end":{"line":87,"column":4,"offset":4116},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In order to connect to and read from a URL we need to construct three things. a ","position":{"start":{"line":89,"column":1,"offset":4118},"end":{"line":89,"column":81,"offset":4198},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"URL","position":{"start":{"line":89,"column":83,"offset":4200},"end":{"line":89,"column":86,"offset":4203},"indent":[]}}],"position":{"start":{"line":89,"column":81,"offset":4198},"end":{"line":89,"column":88,"offset":4205},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":89,"column":88,"offset":4205},"end":{"line":89,"column":90,"offset":4207},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"InputStreamReader","position":{"start":{"line":89,"column":92,"offset":4209},"end":{"line":89,"column":109,"offset":4226},"indent":[]}}],"position":{"start":{"line":89,"column":90,"offset":4207},"end":{"line":89,"column":111,"offset":4228},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":89,"column":111,"offset":4228},"end":{"line":89,"column":117,"offset":4234},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"BufferedReader","position":{"start":{"line":89,"column":119,"offset":4236},"end":{"line":89,"column":133,"offset":4250},"indent":[]}}],"position":{"start":{"line":89,"column":117,"offset":4234},"end":{"line":89,"column":135,"offset":4252},"indent":[]}},{"type":"text","value":". The URL’s job is to point our program in the correct direction, the InputStreamReader’s job is to open a connection to our URL, and finally our BufferedReader’s job is to read from that connection. ","position":{"start":{"line":89,"column":135,"offset":4252},"end":{"line":89,"column":335,"offset":4452},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":4118},"end":{"line":89,"column":335,"offset":4452},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">URL</span> destinationURL <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Declare a new URL for our program to go</span>\n\t<span class=\"token class-name\">InputStreamReader</span> isr <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Declare a DataInputSteram which connects our program to the internet</span>\n\t<span class=\"token class-name\">BufferedReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Make a reader which will read the HTML line by line</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":91,"column":1,"offset":4454},"end":{"line":97,"column":4,"offset":4745},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now we do the real work of connecting and reading. First we initialize our three objects:","position":{"start":{"line":99,"column":1,"offset":4747},"end":{"line":99,"column":90,"offset":4836},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":4747},"end":{"line":99,"column":90,"offset":4836},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n     destinationURL <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">URL</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://\"</span> <span class=\"token operator\">+</span> urlTextField<span class=\"token punctuation\">.</span><span class=\"token function\">getText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Set the URL's location</span>\n     isr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span>destinationURL<span class=\"token punctuation\">.</span><span class=\"token function\">openStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// open a stream to our URL and put the data in isr</span>\n     reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span>isr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Construct the reader to read from the input stream</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n     e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//If any errors happen, print them out</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":101,"column":1,"offset":4838},"end":{"line":109,"column":4,"offset":5246},"indent":[1,1,1,1,1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"It’s important that this code is inside of a ","position":{"start":{"line":111,"column":3,"offset":5250},"end":{"line":111,"column":48,"offset":5295},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"try catch","position":{"start":{"line":111,"column":50,"offset":5297},"end":{"line":111,"column":59,"offset":5306},"indent":[]}}],"position":{"start":{"line":111,"column":48,"offset":5295},"end":{"line":111,"column":61,"offset":5308},"indent":[]}},{"type":"text","value":", otherwise our code would not only not compile, but it would also crash if let’s say the user has no internet connection","position":{"start":{"line":111,"column":61,"offset":5308},"end":{"line":111,"column":182,"offset":5429},"indent":[]}}],"position":{"start":{"line":111,"column":3,"offset":5250},"end":{"line":111,"column":182,"offset":5429},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":5248},"end":{"line":111,"column":182,"offset":5429},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now that we are ready to read data from our ","position":{"start":{"line":113,"column":1,"offset":5431},"end":{"line":113,"column":45,"offset":5475},"indent":[]}},{"type":"strong","children":[{"type":"strong","children":[{"type":"text","value":"reader","position":{"start":{"line":113,"column":49,"offset":5479},"end":{"line":113,"column":55,"offset":5485},"indent":[]}}],"position":{"start":{"line":113,"column":47,"offset":5477},"end":{"line":113,"column":57,"offset":5487},"indent":[]}}],"position":{"start":{"line":113,"column":45,"offset":5475},"end":{"line":113,"column":59,"offset":5489},"indent":[]}},{"type":"text","value":", we can make a String which will represent the line we’re reading from. We want to read EVERYTHING from our reader, line by line. Because each URL will have a different amount of lines, it’s best to use a while loop. Our condition is as long as line isn’t null because once the reader is done, the method ","position":{"start":{"line":113,"column":59,"offset":5489},"end":{"line":113,"column":365,"offset":5795},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"readLine()","position":{"start":{"line":113,"column":367,"offset":5797},"end":{"line":113,"column":377,"offset":5807},"indent":[]}}],"position":{"start":{"line":113,"column":365,"offset":5795},"end":{"line":113,"column":379,"offset":5809},"indent":[]}},{"type":"text","value":" will return ","position":{"start":{"line":113,"column":379,"offset":5809},"end":{"line":113,"column":392,"offset":5822},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"null","position":{"start":{"line":113,"column":394,"offset":5824},"end":{"line":113,"column":398,"offset":5828},"indent":[]}}],"position":{"start":{"line":113,"column":392,"offset":5822},"end":{"line":113,"column":400,"offset":5830},"indent":[]}},{"type":"text","value":". Finally, inside our while loop, we want to add each line to the textarea which can be done using the method ","position":{"start":{"line":113,"column":400,"offset":5830},"end":{"line":113,"column":510,"offset":5940},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"urlTextArea.append","position":{"start":{"line":113,"column":512,"offset":5942},"end":{"line":113,"column":530,"offset":5960},"indent":[]}}],"position":{"start":{"line":113,"column":510,"offset":5940},"end":{"line":113,"column":532,"offset":5962},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":113,"column":532,"offset":5962},"end":{"line":113,"column":533,"offset":5963},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":5431},"end":{"line":113,"column":533,"offset":5963},"indent":[]}},{"type":"html","lang":"java","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">readURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"READURL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token class-name\">URL</span> destinationURL <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Declare a new URL for our program to go</span>\n   <span class=\"token class-name\">InputStreamReader</span> isr <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Declare a DataInputSteram which connects our program to the internet</span>\n   <span class=\"token class-name\">BufferedReader</span> reader <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Make a reader which will read the HTML line by line</span>\n   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      destinationURL <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">URL</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://\"</span> <span class=\"token operator\">+</span> urlTextField<span class=\"token punctuation\">.</span><span class=\"token function\">getText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Set the URL's location</span>\n      isr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span>destinationURL<span class=\"token punctuation\">.</span><span class=\"token function\">openStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// open a stream to our URL and put the data in isr</span>\n      reader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span>isr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Construct the reader to read from the input stream</span>\n      <span class=\"token class-name\">String</span> line <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Make a blank string</span>\n      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>line <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//Read until line is null</span>\n         urlTextArea<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>line <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Add the line to our text area</span>\n         line <span class=\"token operator\">=</span> reader<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Read the next line</span>\n      <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//If any errors happen, print them out</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":115,"column":1,"offset":5965},"end":{"line":134,"column":4,"offset":6938},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"the “\\n” in our code means go to the next line, it’s like our own version of System.out.println but instead of printing to the console, we’re printing to the screen.","position":{"start":{"line":136,"column":3,"offset":6942},"end":{"line":136,"column":168,"offset":7107},"indent":[]}}],"position":{"start":{"line":136,"column":3,"offset":6942},"end":{"line":136,"column":168,"offset":7107},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":6940},"end":{"line":136,"column":168,"offset":7107},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"And that’s it! Run the program and type in a test url, maybe ","position":{"start":{"line":138,"column":1,"offset":7109},"end":{"line":138,"column":62,"offset":7170},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"www.milton.edu","position":{"start":{"line":138,"column":64,"offset":7172},"end":{"line":138,"column":78,"offset":7186},"indent":[]}}],"position":{"start":{"line":138,"column":62,"offset":7170},"end":{"line":138,"column":80,"offset":7188},"indent":[]}},{"type":"text","value":"? For your homework, try showing only the lines that contain “href” so that what’s displayed on the screen is a bunch of URLs. Next time we’re going to go over parsing a different kind of text.","position":{"start":{"line":138,"column":80,"offset":7188},"end":{"line":138,"column":273,"offset":7381},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":7109},"end":{"line":138,"column":273,"offset":7381},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{% gist e588354aabb7a730933c3eb8bbf73886 %}","position":{"start":{"line":142,"column":1,"offset":7385},"end":{"line":142,"column":44,"offset":7428},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":7385},"end":{"line":142,"column":44,"offset":7428},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":142,"column":44,"offset":7428}}}}