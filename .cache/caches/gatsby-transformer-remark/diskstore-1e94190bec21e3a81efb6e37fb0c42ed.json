{"expireTime":9007200815377754000,"key":"transformer-remark-markdown-html-6a9a7913fe6a01e626a6648aa5ba17b5-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<h3 id=\"object-oriented-design\"><a href=\"#object-oriented-design\" aria-label=\"object oriented design permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Object Oriented Design</h3>\n<p>Second day of OOD we dive right in to books and citations. Basically we have books and two ways to cite them: MLA and APA. What happens when we want to add a new citation for websites. In our original system we just have to add one case. The racket code to do this properly looks like this: </p>\n<div class=\"gatsby-highlight\" data-language=\"racket\"><pre class=\"language-racket\"><code class=\"language-racket\">;; new-article: String String String Number Number Number -&gt; Publication\n;; To construct a new article.\n(define (new-article title author journal volume issue year)\n  (lambda (style)\n    (cond\n      [(string=? style &quot;apa&quot;)\n       (format &quot;~a (~a). ~a. ~a, ~a(~a).&quot;\n               author year title journal volume issue)]\n      [(string=? style &quot;mla&quot;)\n       (format &quot;~a. \\&quot;~a.\\&quot; ~a ~a.~a (~a).&quot;\n               author title journal volume issue year)])))\n\n;; Examples:\n(define turing\n        (new-article &quot;Computing machinery and intelligence&quot;\n                     &quot;A. M. Turing&quot; &quot;Mind&quot; 59 236 1950))\n\n(check-expect (turing &quot;apa&quot;) (cite-apa turing))\n(check-expect (turing &quot;mla&quot;) (cite-mla turing))\n\n;; new-webpage: String String String -&gt; Publication\n;; To construct a new web page.\n(define (new-webpage title url retrieved)\n  (lambda (style)\n    (cond\n      [(string=? style &quot;apa&quot;)\n       (format &quot;~a. Retrieved ~a, from ~a.&quot;\n               title retrieved url)]\n      [(string=? style &quot;mla&quot;)\n       (format &quot;\\&quot;~a.\\&quot; Web. ~a &lt;~a&gt;.&quot;\n               title retrieved url)])))\n\n;; Examples:\n(define cs3500\n        (new-webpage &quot;CS3500: Object-Oriented Design&quot;\n                     &quot;http://www.ccs.neu.edu/course/cs3500/&quot;\n                     &quot;August 11, 2014&quot;))\n\n(check-expect (cs3500 &quot;apa&quot;) (cite-apa cs3500))\n(check-expect (cs3500 &quot;mla&quot;) (cite-mla cs3500))</code></pre></div>\n<p>Racket can do this, however, thereâ€™s no way to enforce it. The advantage of Java is that it can force us to give structure. To do this, we use an interface:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * Specifies operations for formatting citations from bibliographic data.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Publication</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/**\n   * Formats a citation in APA style.\n   *\n   * @return the formatted citation\n   */</span>\n  <span class=\"token class-name\">String</span> <span class=\"token function\">citeApa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * Formats a citation in MLA style.\n   *\n   * @return the formatted citation\n   */</span>\n  <span class=\"token class-name\">String</span> <span class=\"token function\">citeMla</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>From there we can have a class that represents each kind of publication (book, article, webpage). In racket the operation of citation takes and churns something else, in Java the operation is encapsulated in the object. Now we add the following properties:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * Created by jea on 1/13/17.\n */</span>\n<span class=\"token comment\">/*\n * This class represents a specific kind of publication\n * A book has an author, title, publisher, location, and year\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Book</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Publication</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> author<span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> publisher<span class=\"token punctuation\">,</span> location<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> year<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/** Constructs a {@code Book} object.\n   *\n   * @param title     the title of the book\n   * @param author    the author of the book\n   * @param publisher the publisher of the book\n   * @param location  the location of the publisher\n   * @param year      the year of publication\n   */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Book</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> author<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> title<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> publisher<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> year<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>author <span class=\"token operator\">=</span> author<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> title<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>publisher <span class=\"token operator\">=</span> publisher<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> location<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>year <span class=\"token operator\">=</span> year<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Formats a citation in APA style.\n     *\n     * @return the formatted citation\n     */</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">citeApa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * Formats a citation in MLA style.\n     *\n     * @return the formatted citation\n     */</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">citeMla</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now we implement the methods:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/**\n     * Formats a citation in APA style.\n     *\n     * @return the formatted citation\n     */</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">citeApa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s (%s). %s. %s: %s\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">,</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>year<span class=\"token punctuation\">,</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">,</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">,</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>publisher<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">/**\n     * Formats a citation in MLA style.\n     *\n     * @return the formatted citation\n     */</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">citeMla</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> author <span class=\"token operator\">+</span> <span class=\"token string\">\". \"</span> <span class=\"token operator\">+</span> title <span class=\"token operator\">+</span> <span class=\"token string\">\". \"</span> <span class=\"token operator\">+</span> location <span class=\"token operator\">+</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">+</span> publisher <span class=\"token operator\">+</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">+</span> year <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<p>And now we add testing. In this class, weâ€™re going to be using JUnit, which is a solid testing library. This is what that looks like:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * Created by jea on 1/13/17.\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BookTest</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">Publication</span> rushdie <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Book</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Midnight's Children\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Salman Rushdie\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">\"Jonathan Cape\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"London\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1980</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token annotation punctuation\">@Test</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testCiteApa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Salman Rushdie (1980). Midnight's Children. \"</span>\n                    <span class=\"token operator\">+</span> <span class=\"token string\">\"London: Jonathan Cape.\"</span><span class=\"token punctuation\">,</span>\n            rushdie<span class=\"token punctuation\">.</span><span class=\"token function\">citeApa</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token annotation punctuation\">@Test</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">testCiteMla</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Salman Rushdie. Midnight's Children. London: \"</span>\n                    <span class=\"token operator\">+</span> <span class=\"token string\">\"Jonathan Cape, 1980.\"</span><span class=\"token punctuation\">,</span>\n            rushdie<span class=\"token punctuation\">.</span><span class=\"token function\">citeMla</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now weâ€™re moving to obsevers and adhereing to Java standards about basic observers and operations like comparisons, add, subtract, etc. And thatâ€™s class. </p>\n<p>The assignment up now, pretty easy. Already did the first half. The second half is making a custom formatter. I want to try out some Java 8 streams, so hereâ€™s a taste:</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> c <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">toCharArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">IntStream</span><span class=\"token punctuation\">.</span><span class=\"token function\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-></span> c<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'%'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">mapToObj</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-></span> c<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token operator\">:</span><span class=\"token operator\">:</span><span class=\"token function\">println</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>"}