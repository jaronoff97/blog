{"expireTime":9007200815366029000,"key":"transformer-remark-markdown-html-18bde375f34980d94bae410926b7d1ed-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<p>Today is gonna be our toughest day yet, but by the end of it, you’re gonna know everything you have to about Swift.</p>\n<p>Lets look back to our Student and Homework classes: </p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">enum</span> <span class=\"token builtin\">Subject</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">English</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">Programming</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">Language</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">Science</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">History</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">struct</span> <span class=\"token builtin\">Homework</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> subject<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Subject</span>\n  <span class=\"token keyword\">var</span> due_date<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span>\n  <span class=\"token keyword\">var</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span>\n  <span class=\"token keyword\">var</span> age<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span>\n  <span class=\"token keyword\">var</span> grade<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">let</span> uniform_needed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> _homework<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">Homework</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> homework<span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">Homework</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> _homework\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span><span class=\"token builtin\">String</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span><span class=\"token builtin\">Int</span><span class=\"token punctuation\">,</span> grade<span class=\"token punctuation\">:</span><span class=\"token builtin\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>age<span class=\"token operator\">=</span>age\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>grade<span class=\"token operator\">=</span>grade\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function\">new_assignment</span><span class=\"token punctuation\">(</span>new_homework<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Homework</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>_homework<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>new_homework<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Lets say we want to sort our homeworks by their priority (lets add in that trait) first:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">struct</span> <span class=\"token builtin\">Homework</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> subject<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Subject</span>\n  <span class=\"token keyword\">var</span> due_date<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span>\n  <span class=\"token keyword\">var</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span>\n  <span class=\"token keyword\">var</span> priority<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Lets say our student has a bunch of homework assignments. Lets add a way for our student class that’ll help our student stay organized. Now one way of doing this would be a swift implementation of the classic sorting algorithms. But let’s do this the <strong>swift</strong> way. Let’s sort our array everytime someone calls our getter for our <strong>_homework</strong> variable. </p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> homework<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">Homework</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>_homework <span class=\"token operator\">=</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>_homework<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>homework1<span class=\"token punctuation\">,</span> homework2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>homework1<span class=\"token punctuation\">.</span>priority <span class=\"token operator\">&lt;</span> homework2<span class=\"token punctuation\">.</span>priority<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>_homework\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>So let’s go over what’s happening here. The sort method of the array class takes what’s called a closure as a parameter. Think of a closure as a function. It’s a function without a name. When we give it a name this closure is a variable. Here’s what that looks like with full verbosity:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> cool_closure<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">String</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token builtin\">String</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>param1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>param1<span class=\"token delimiter variable\">)</span></span>\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">cool_closure</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"world\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>So let’s go over what’s happening here. The type of this variable is <strong>(String)->String</strong>. This means that this function takes a string as a parameter and returns a string. We can use that parameter similar to the syntax of a for loop: <strong>variable</strong> <strong>in</strong> (our function).</p>\n<p>If we looked at the type of our function <strong>new_assignnment</strong> in our <strong>student</strong> class it would be <strong>(Homework)->Void</strong> because it takes a <strong>Homework</strong> as a parameter and returns nothing or <strong>Void</strong>. Here are some more examples of closure types:</p>\n<ul>\n<li>()->Void takes no params and returns nothing</li>\n<li>()->Int takes no params and returns an Int</li>\n<li>(name:String)->String takes a named parameter and returns a String</li>\n</ul>\n<p>So lets look at a method that takes a closure as a parameter:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">apply_operator</span><span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span><span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token builtin\">Int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">op</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>rhs<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">apply_operator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n  <span class=\"token keyword\">return</span> lhs <span class=\"token operator\">*</span> rhs\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">apply_operator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n  <span class=\"token keyword\">return</span> lhs <span class=\"token operator\">+</span> rhs\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<blockquote>\n<p>Notice how because our parameters are named in our function <strong>apply_operator</strong> we have to name them when we call our closure. </p>\n</blockquote>\n<p>So now back to our original use of closures. If we peered inside the Array’s Sort method we’d see that it would look something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">Element</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">Element</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token builtin\">Bool</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token builtin\">Array</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//after a bunch of code it would call:</span>\n  <span class=\"token function\">method</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>So in order to use this we have to pass in a closure that takes two elements as parameters and returns a boolean.  Which is why if we want to sort by the homework’s priorities, we can pass in the following closure:</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>homework1<span class=\"token punctuation\">,</span> homework2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>homework1<span class=\"token punctuation\">.</span>priority <span class=\"token operator\">&lt;</span> homework2<span class=\"token punctuation\">.</span>priority<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>The method takes two params and returns a boolean. Because the <strong>sort</strong> method takes a closure that returns a boolean, we don’t have to explicitly specify our closure will return a boolean. </p>\n</blockquote>\n<p>Let’s say there are a bunch of ways to sort our homework assignments. Let’s make an enum which will represent the sorting methods</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">enum</span> <span class=\"token builtin\">SortMethod</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">AscendingPriority</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">DescendingPriority</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">AscendingDueDate</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">DescendingDueDate</span>\n\n  <span class=\"token keyword\">func</span> <span class=\"token function\">sort_function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token builtin\">Homework</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">Homework</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token builtin\">Bool</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token keyword\">self</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token builtin\">AscendingPriority</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>h1<span class=\"token punctuation\">,</span> h2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n        <span class=\"token keyword\">return</span> h1<span class=\"token punctuation\">.</span>priority<span class=\"token operator\">></span>h2<span class=\"token punctuation\">.</span>priority\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">case</span> <span class=\"token builtin\">DescendingPriority</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>h1<span class=\"token punctuation\">,</span> h2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n        <span class=\"token keyword\">return</span> h1<span class=\"token punctuation\">.</span>priority<span class=\"token operator\">&lt;</span>h2<span class=\"token punctuation\">.</span>priority\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">case</span> <span class=\"token builtin\">AscendingDueDate</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>h1<span class=\"token punctuation\">,</span> h2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n        <span class=\"token keyword\">return</span> h1<span class=\"token punctuation\">.</span>due_date<span class=\"token operator\">></span>h2<span class=\"token punctuation\">.</span>due_date\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">case</span> <span class=\"token builtin\">DescendingDueDate</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>h1<span class=\"token punctuation\">,</span> h2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n        <span class=\"token keyword\">return</span> h1<span class=\"token punctuation\">.</span>due_date<span class=\"token operator\">&lt;</span>h2<span class=\"token punctuation\">.</span>due_date\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>So our enum has four cases: AscendingPriority, DescendingPriority, AscendingDueDate, DescendingDueDate. The next part is a bit weird. Our enum has a function that will return a function that takes two Homeworks and returns a boolean. Now we know that our Array’s sort function takes a closure which has two Homeworks as params and returns a boolean. So what our enum’s function is doing is returning a function which will be passed in to our <strong>Student’s Array’s Sort</strong> function. </p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"> <span class=\"token keyword\">var</span> sortMethod<span class=\"token punctuation\">:</span> <span class=\"token builtin\">SortMethod</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token builtin\">AscendingPriority</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> _homework<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">Homework</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> homework<span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">Homework</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>_homework <span class=\"token operator\">=</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>_homework<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>sortMethod<span class=\"token punctuation\">.</span><span class=\"token function\">sort_function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>_homework\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>To test this out, change the sort method and print out the homework array.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">jacob<span class=\"token punctuation\">.</span>sortMethod <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token builtin\">AscendingPriority</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----AscendingPriority-----\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>jacob<span class=\"token punctuation\">.</span>homework<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----AscendingPriority-----\"</span><span class=\"token punctuation\">)</span>\njacob<span class=\"token punctuation\">.</span>sortMethod <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token builtin\">DescendingPriority</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----DescendingPriority-----\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>jacob<span class=\"token punctuation\">.</span>homework<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----DescendingPriority-----\"</span><span class=\"token punctuation\">)</span>\njacob<span class=\"token punctuation\">.</span>sortMethod <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token builtin\">AscendingDueDate</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----AscendingDueDate-----\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>jacob<span class=\"token punctuation\">.</span>homework<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----AscendingDueDate-----\"</span><span class=\"token punctuation\">)</span>\njacob<span class=\"token punctuation\">.</span>sortMethod <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token builtin\">DescendingDueDate</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----DescendingDueDate-----\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>jacob<span class=\"token punctuation\">.</span>homework<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----DescendingDueDate-----\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Well that’s all for now, I know this was a tough one, but hopefully you understood it. Next time we’re going to start iOS application building by learning three final swift concepts. I also think I’m going to make a video to show the iOS stuff.</p>\n<p>{% gist a6e7e5566745593fcbaa7e5a29169c2e %}</p>"}