{"expireTime":9007200815364656000,"key":"transformer-remark-markdown-html-ast-18bde375f34980d94bae410926b7d1ed-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Today is gonna be our toughest day yet, but by the end of it, you’re gonna know everything you have to about Swift.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":116,"offset":116}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":116,"offset":116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Lets look back to our Student and Homework classes: ","position":{"start":{"line":4,"column":1,"offset":118},"end":{"line":4,"column":53,"offset":170}}}],"position":{"start":{"line":4,"column":1,"offset":118},"end":{"line":4,"column":53,"offset":170}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">enum</span> <span class=\"token builtin\">Subject</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">English</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">Programming</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">Language</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">Science</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">History</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">struct</span> <span class=\"token builtin\">Homework</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> subject<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Subject</span>\n  <span class=\"token keyword\">var</span> due_date<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span>\n  <span class=\"token keyword\">var</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span>\n  <span class=\"token keyword\">var</span> age<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span>\n  <span class=\"token keyword\">var</span> grade<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span>\n  <span class=\"token keyword\">static</span> <span class=\"token keyword\">let</span> uniform_needed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> _homework<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">Homework</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> homework<span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">Homework</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> _homework\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">init</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span><span class=\"token builtin\">String</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span><span class=\"token builtin\">Int</span><span class=\"token punctuation\">,</span> grade<span class=\"token punctuation\">:</span><span class=\"token builtin\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>name<span class=\"token operator\">=</span>name\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>age<span class=\"token operator\">=</span>age\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>grade<span class=\"token operator\">=</span>grade\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">func</span> <span class=\"token function\">new_assignment</span><span class=\"token punctuation\">(</span>new_homework<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Homework</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>_homework<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>new_homework<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":6,"column":1,"offset":172},"end":{"line":40,"column":4,"offset":791}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Lets say we want to sort our homeworks by their priority (lets add in that trait) first:","position":{"start":{"line":42,"column":1,"offset":793},"end":{"line":42,"column":89,"offset":881}}}],"position":{"start":{"line":42,"column":1,"offset":793},"end":{"line":42,"column":89,"offset":881}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">struct</span> <span class=\"token builtin\">Homework</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> subject<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Subject</span>\n  <span class=\"token keyword\">var</span> due_date<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span>\n  <span class=\"token keyword\">var</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span>\n  <span class=\"token keyword\">var</span> priority<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":44,"column":1,"offset":883},"end":{"line":51,"column":4,"offset":1001}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Lets say our student has a bunch of homework assignments. Lets add a way for our student class that’ll help our student stay organized. Now one way of doing this would be a swift implementation of the classic sorting algorithms. But let’s do this the ","position":{"start":{"line":53,"column":1,"offset":1003},"end":{"line":53,"column":252,"offset":1254}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"swift","position":{"start":{"line":53,"column":254,"offset":1256},"end":{"line":53,"column":259,"offset":1261}}}],"position":{"start":{"line":53,"column":252,"offset":1254},"end":{"line":53,"column":261,"offset":1263}}},{"type":"text","value":" way. Let’s sort our array everytime someone calls our getter for our ","position":{"start":{"line":53,"column":261,"offset":1263},"end":{"line":53,"column":331,"offset":1333}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"_homework","position":{"start":{"line":53,"column":333,"offset":1335},"end":{"line":53,"column":342,"offset":1344}}}],"position":{"start":{"line":53,"column":331,"offset":1333},"end":{"line":53,"column":344,"offset":1346}}},{"type":"text","value":" variable. ","position":{"start":{"line":53,"column":344,"offset":1346},"end":{"line":53,"column":355,"offset":1357}}}],"position":{"start":{"line":53,"column":1,"offset":1003},"end":{"line":53,"column":355,"offset":1357}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> homework<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">Homework</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>_homework <span class=\"token operator\">=</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>_homework<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>homework1<span class=\"token punctuation\">,</span> homework2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>homework1<span class=\"token punctuation\">.</span>priority <span class=\"token operator\">&lt;</span> homework2<span class=\"token punctuation\">.</span>priority<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>_homework\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":55,"column":1,"offset":1359},"end":{"line":64,"column":4,"offset":1577}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So let’s go over what’s happening here. The sort method of the array class takes what’s called a closure as a parameter. Think of a closure as a function. It’s a function without a name. When we give it a name this closure is a variable. Here’s what that looks like with full verbosity:","position":{"start":{"line":66,"column":1,"offset":1579},"end":{"line":66,"column":287,"offset":1865}}}],"position":{"start":{"line":66,"column":1,"offset":1579},"end":{"line":66,"column":287,"offset":1865}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> cool_closure<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">String</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token builtin\">String</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>param1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>param1<span class=\"token delimiter variable\">)</span></span>\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">cool_closure</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"world\"</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":68,"column":1,"offset":1867},"end":{"line":73,"column":4,"offset":1982}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So let’s go over what’s happening here. The type of this variable is ","position":{"start":{"line":75,"column":1,"offset":1984},"end":{"line":75,"column":70,"offset":2053}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"(String)->String","position":{"start":{"line":75,"column":72,"offset":2055},"end":{"line":75,"column":88,"offset":2071}}}],"position":{"start":{"line":75,"column":70,"offset":2053},"end":{"line":75,"column":90,"offset":2073}}},{"type":"text","value":". This means that this function takes a string as a parameter and returns a string. We can use that parameter similar to the syntax of a for loop: ","position":{"start":{"line":75,"column":90,"offset":2073},"end":{"line":75,"column":237,"offset":2220}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"variable","position":{"start":{"line":75,"column":239,"offset":2222},"end":{"line":75,"column":247,"offset":2230}}}],"position":{"start":{"line":75,"column":237,"offset":2220},"end":{"line":75,"column":249,"offset":2232}}},{"type":"text","value":" ","position":{"start":{"line":75,"column":249,"offset":2232},"end":{"line":75,"column":250,"offset":2233}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"in","position":{"start":{"line":75,"column":252,"offset":2235},"end":{"line":75,"column":254,"offset":2237}}}],"position":{"start":{"line":75,"column":250,"offset":2233},"end":{"line":75,"column":256,"offset":2239}}},{"type":"text","value":" (our function).","position":{"start":{"line":75,"column":256,"offset":2239},"end":{"line":75,"column":272,"offset":2255}}}],"position":{"start":{"line":75,"column":1,"offset":1984},"end":{"line":75,"column":272,"offset":2255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we looked at the type of our function ","position":{"start":{"line":77,"column":1,"offset":2257},"end":{"line":77,"column":42,"offset":2298}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"new_assignnment","position":{"start":{"line":77,"column":44,"offset":2300},"end":{"line":77,"column":59,"offset":2315}}}],"position":{"start":{"line":77,"column":42,"offset":2298},"end":{"line":77,"column":61,"offset":2317}}},{"type":"text","value":" in our ","position":{"start":{"line":77,"column":61,"offset":2317},"end":{"line":77,"column":69,"offset":2325}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"student","position":{"start":{"line":77,"column":71,"offset":2327},"end":{"line":77,"column":78,"offset":2334}}}],"position":{"start":{"line":77,"column":69,"offset":2325},"end":{"line":77,"column":80,"offset":2336}}},{"type":"text","value":" class it would be ","position":{"start":{"line":77,"column":80,"offset":2336},"end":{"line":77,"column":99,"offset":2355}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"(Homework)->Void","position":{"start":{"line":77,"column":101,"offset":2357},"end":{"line":77,"column":117,"offset":2373}}}],"position":{"start":{"line":77,"column":99,"offset":2355},"end":{"line":77,"column":119,"offset":2375}}},{"type":"text","value":" because it takes a ","position":{"start":{"line":77,"column":119,"offset":2375},"end":{"line":77,"column":139,"offset":2395}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Homework","position":{"start":{"line":77,"column":141,"offset":2397},"end":{"line":77,"column":149,"offset":2405}}}],"position":{"start":{"line":77,"column":139,"offset":2395},"end":{"line":77,"column":151,"offset":2407}}},{"type":"text","value":" as a parameter and returns nothing or ","position":{"start":{"line":77,"column":151,"offset":2407},"end":{"line":77,"column":190,"offset":2446}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Void","position":{"start":{"line":77,"column":192,"offset":2448},"end":{"line":77,"column":196,"offset":2452}}}],"position":{"start":{"line":77,"column":190,"offset":2446},"end":{"line":77,"column":198,"offset":2454}}},{"type":"text","value":". Here are some more examples of closure types:","position":{"start":{"line":77,"column":198,"offset":2454},"end":{"line":77,"column":245,"offset":2501}}}],"position":{"start":{"line":77,"column":1,"offset":2257},"end":{"line":77,"column":245,"offset":2501}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"()->Void takes no params and returns nothing","position":{"start":{"line":79,"column":3,"offset":2505},"end":{"line":79,"column":47,"offset":2549}}}],"position":{"start":{"line":79,"column":1,"offset":2503},"end":{"line":79,"column":47,"offset":2549}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"()->Int takes no params and returns an Int","position":{"start":{"line":80,"column":3,"offset":2552},"end":{"line":80,"column":45,"offset":2594}}}],"position":{"start":{"line":80,"column":1,"offset":2550},"end":{"line":80,"column":45,"offset":2594}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"(name:String)->String takes a named parameter and returns a String","position":{"start":{"line":81,"column":3,"offset":2597},"end":{"line":81,"column":69,"offset":2663}}}],"position":{"start":{"line":81,"column":1,"offset":2595},"end":{"line":81,"column":69,"offset":2663}}},{"type":"text","value":"\n"}],"position":{"start":{"line":79,"column":1,"offset":2503},"end":{"line":81,"column":69,"offset":2663}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So lets look at a method that takes a closure as a parameter:","position":{"start":{"line":83,"column":1,"offset":2665},"end":{"line":83,"column":62,"offset":2726}}}],"position":{"start":{"line":83,"column":1,"offset":2665},"end":{"line":83,"column":62,"offset":2726}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">apply_operator</span><span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span><span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token builtin\">Int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">op</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>rhs<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">apply_operator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n  <span class=\"token keyword\">return</span> lhs <span class=\"token operator\">*</span> rhs\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">apply_operator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n  <span class=\"token keyword\">return</span> lhs <span class=\"token operator\">+</span> rhs\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":85,"column":1,"offset":2728},"end":{"line":95,"column":4,"offset":2929}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Notice how because our parameters are named in our function ","position":{"start":{"line":97,"column":3,"offset":2933},"end":{"line":97,"column":63,"offset":2993}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"apply_operator","position":{"start":{"line":97,"column":65,"offset":2995},"end":{"line":97,"column":79,"offset":3009}}}],"position":{"start":{"line":97,"column":63,"offset":2993},"end":{"line":97,"column":81,"offset":3011}}},{"type":"text","value":" we have to name them when we call our closure. ","position":{"start":{"line":97,"column":81,"offset":3011},"end":{"line":97,"column":129,"offset":3059}}}],"position":{"start":{"line":97,"column":3,"offset":2933},"end":{"line":97,"column":129,"offset":3059}}},{"type":"text","value":"\n"}],"position":{"start":{"line":97,"column":1,"offset":2931},"end":{"line":97,"column":129,"offset":3059}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So now back to our original use of closures. If we peered inside the Array’s Sort method we’d see that it would look something like this:","position":{"start":{"line":99,"column":1,"offset":3061},"end":{"line":99,"column":138,"offset":3198}}}],"position":{"start":{"line":99,"column":1,"offset":3061},"end":{"line":99,"column":138,"offset":3198}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">Element</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">Element</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token builtin\">Bool</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token builtin\">Array</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//after a bunch of code it would call:</span>\n  <span class=\"token function\">method</span><span class=\"token punctuation\">(</span>arr1<span class=\"token punctuation\">,</span> arr2<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":101,"column":1,"offset":3200},"end":{"line":106,"column":4,"offset":3328}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So in order to use this we have to pass in a closure that takes two elements as parameters and returns a boolean.  Which is why if we want to sort by the homework’s priorities, we can pass in the following closure:","position":{"start":{"line":108,"column":1,"offset":3330},"end":{"line":108,"column":215,"offset":3544}}}],"position":{"start":{"line":108,"column":1,"offset":3330},"end":{"line":108,"column":215,"offset":3544}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>homework1<span class=\"token punctuation\">,</span> homework2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>homework1<span class=\"token punctuation\">.</span>priority <span class=\"token operator\">&lt;</span> homework2<span class=\"token punctuation\">.</span>priority<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":110,"column":1,"offset":3546},"end":{"line":114,"column":4,"offset":3639}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The method takes two params and returns a boolean. Because the ","position":{"start":{"line":116,"column":3,"offset":3643},"end":{"line":116,"column":66,"offset":3706}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"sort","position":{"start":{"line":116,"column":68,"offset":3708},"end":{"line":116,"column":72,"offset":3712}}}],"position":{"start":{"line":116,"column":66,"offset":3706},"end":{"line":116,"column":74,"offset":3714}}},{"type":"text","value":" method takes a closure that returns a boolean, we don’t have to explicitly specify our closure will return a boolean. ","position":{"start":{"line":116,"column":74,"offset":3714},"end":{"line":116,"column":193,"offset":3833}}}],"position":{"start":{"line":116,"column":3,"offset":3643},"end":{"line":116,"column":193,"offset":3833}}},{"type":"text","value":"\n"}],"position":{"start":{"line":116,"column":1,"offset":3641},"end":{"line":116,"column":193,"offset":3833}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let’s say there are a bunch of ways to sort our homework assignments. Let’s make an enum which will represent the sorting methods","position":{"start":{"line":118,"column":1,"offset":3835},"end":{"line":118,"column":130,"offset":3964}}}],"position":{"start":{"line":118,"column":1,"offset":3835},"end":{"line":118,"column":130,"offset":3964}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">enum</span> <span class=\"token builtin\">SortMethod</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">AscendingPriority</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">DescendingPriority</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">AscendingDueDate</span>\n  <span class=\"token keyword\">case</span> <span class=\"token builtin\">DescendingDueDate</span>\n\n  <span class=\"token keyword\">func</span> <span class=\"token function\">sort_function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token builtin\">Homework</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">Homework</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token builtin\">Bool</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token keyword\">self</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token builtin\">AscendingPriority</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>h1<span class=\"token punctuation\">,</span> h2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n        <span class=\"token keyword\">return</span> h1<span class=\"token punctuation\">.</span>priority<span class=\"token operator\">></span>h2<span class=\"token punctuation\">.</span>priority\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">case</span> <span class=\"token builtin\">DescendingPriority</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>h1<span class=\"token punctuation\">,</span> h2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n        <span class=\"token keyword\">return</span> h1<span class=\"token punctuation\">.</span>priority<span class=\"token operator\">&lt;</span>h2<span class=\"token punctuation\">.</span>priority\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">case</span> <span class=\"token builtin\">AscendingDueDate</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>h1<span class=\"token punctuation\">,</span> h2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n        <span class=\"token keyword\">return</span> h1<span class=\"token punctuation\">.</span>due_date<span class=\"token operator\">></span>h2<span class=\"token punctuation\">.</span>due_date\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">case</span> <span class=\"token builtin\">DescendingDueDate</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>h1<span class=\"token punctuation\">,</span> h2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n        <span class=\"token keyword\">return</span> h1<span class=\"token punctuation\">.</span>due_date<span class=\"token operator\">&lt;</span>h2<span class=\"token punctuation\">.</span>due_date\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":120,"column":1,"offset":3966},"end":{"line":148,"column":4,"offset":4588}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So our enum has four cases: AscendingPriority, DescendingPriority, AscendingDueDate, DescendingDueDate. The next part is a bit weird. Our enum has a function that will return a function that takes two Homeworks and returns a boolean. Now we know that our Array’s sort function takes a closure which has two Homeworks as params and returns a boolean. So what our enum’s function is doing is returning a function which will be passed in to our ","position":{"start":{"line":150,"column":1,"offset":4590},"end":{"line":150,"column":443,"offset":5032}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Student’s Array’s Sort","position":{"start":{"line":150,"column":445,"offset":5034},"end":{"line":150,"column":467,"offset":5056}}}],"position":{"start":{"line":150,"column":443,"offset":5032},"end":{"line":150,"column":469,"offset":5058}}},{"type":"text","value":" function. ","position":{"start":{"line":150,"column":469,"offset":5058},"end":{"line":150,"column":480,"offset":5069}}}],"position":{"start":{"line":150,"column":1,"offset":4590},"end":{"line":150,"column":480,"offset":5069}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"> <span class=\"token keyword\">var</span> sortMethod<span class=\"token punctuation\">:</span> <span class=\"token builtin\">SortMethod</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token builtin\">AscendingPriority</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> _homework<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">Homework</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">var</span> homework<span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">Homework</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">get</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>_homework <span class=\"token operator\">=</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>_homework<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>sortMethod<span class=\"token punctuation\">.</span><span class=\"token function\">sort_function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>_homework\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":152,"column":1,"offset":5071},"end":{"line":161,"column":4,"offset":5332}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To test this out, change the sort method and print out the homework array.","position":{"start":{"line":163,"column":1,"offset":5334},"end":{"line":163,"column":75,"offset":5408}}}],"position":{"start":{"line":163,"column":1,"offset":5334},"end":{"line":163,"column":75,"offset":5408}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\">jacob<span class=\"token punctuation\">.</span>sortMethod <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token builtin\">AscendingPriority</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----AscendingPriority-----\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>jacob<span class=\"token punctuation\">.</span>homework<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----AscendingPriority-----\"</span><span class=\"token punctuation\">)</span>\njacob<span class=\"token punctuation\">.</span>sortMethod <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token builtin\">DescendingPriority</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----DescendingPriority-----\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>jacob<span class=\"token punctuation\">.</span>homework<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----DescendingPriority-----\"</span><span class=\"token punctuation\">)</span>\njacob<span class=\"token punctuation\">.</span>sortMethod <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token builtin\">AscendingDueDate</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----AscendingDueDate-----\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>jacob<span class=\"token punctuation\">.</span>homework<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----AscendingDueDate-----\"</span><span class=\"token punctuation\">)</span>\njacob<span class=\"token punctuation\">.</span>sortMethod <span class=\"token operator\">=</span> <span class=\"token punctuation\">.</span><span class=\"token builtin\">DescendingDueDate</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----DescendingDueDate-----\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>jacob<span class=\"token punctuation\">.</span>homework<span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----DescendingDueDate-----\"</span><span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":165,"column":1,"offset":5410},"end":{"line":182,"column":4,"offset":5959}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Well that’s all for now, I know this was a tough one, but hopefully you understood it. Next time we’re going to start iOS application building by learning three final swift concepts. I also think I’m going to make a video to show the iOS stuff.","position":{"start":{"line":184,"column":1,"offset":5961},"end":{"line":184,"column":245,"offset":6205}}}],"position":{"start":{"line":184,"column":1,"offset":5961},"end":{"line":184,"column":245,"offset":6205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"{% gist a6e7e5566745593fcbaa7e5a29169c2e %}","position":{"start":{"line":186,"column":1,"offset":6207},"end":{"line":186,"column":44,"offset":6250}}}],"position":{"start":{"line":186,"column":1,"offset":6207},"end":{"line":186,"column":44,"offset":6250}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":187,"column":1,"offset":6251}}}}