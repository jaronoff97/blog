{"expireTime":9007200815366030000,"key":"transformer-remark-markdown-html-ast-53008be2d586cbf7c8be607b511bee57-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"h3","properties":{"id":"object-oriented-design"},"children":[{"type":"element","tagName":"a","properties":{"href":"#object-oriented-design","aria-label":"object oriented design permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Object Oriented Design","position":{"start":{"line":2,"column":5,"offset":5},"end":{"line":2,"column":27,"offset":27}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":27,"offset":27}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As you may notice there is no part 4 because I didn’t go to class that day. We jump into class today with basic Java arrays.","position":{"start":{"line":4,"column":1,"offset":29},"end":{"line":4,"column":125,"offset":153}}}],"position":{"start":{"line":4,"column":1,"offset":29},"end":{"line":4,"column":125,"offset":153}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"arrays"},"children":[{"type":"element","tagName":"a","properties":{"href":"#arrays","aria-label":"arrays permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Arrays","position":{"start":{"line":7,"column":5,"offset":160},"end":{"line":7,"column":11,"offset":166}}}],"position":{"start":{"line":7,"column":1,"offset":156},"end":{"line":7,"column":11,"offset":166}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">54</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> array3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token number\">23</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":10,"column":1,"offset":169},"end":{"line":14,"column":4,"offset":282}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here’s how we use them:","position":{"start":{"line":16,"column":1,"offset":284},"end":{"line":16,"column":24,"offset":307}}}],"position":{"start":{"line":16,"column":1,"offset":284},"end":{"line":16,"column":24,"offset":307}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> intArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> intArray<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> intArray<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nintArray<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">17</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span> intArray<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">assertEquals</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> intArray<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":18,"column":1,"offset":309},"end":{"line":28,"column":4,"offset":498}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Aliasing is very important with arrays!!!","position":{"start":{"line":31,"column":1,"offset":501},"end":{"line":31,"column":42,"offset":542}}}],"position":{"start":{"line":31,"column":1,"offset":501},"end":{"line":31,"column":42,"offset":542}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a3 <span class=\"token operator\">=</span> a1<span class=\"token punctuation\">;</span>\n<span class=\"token function\">aE</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token function\">aE</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token function\">aE</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> a3<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\na1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">aE</span><span class=\"token punctuation\">(</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token function\">aE</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token function\">aE</span><span class=\"token punctuation\">(</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> a3<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\na2<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">aE</span><span class=\"token punctuation\">(</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token function\">aE</span><span class=\"token punctuation\">(</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token function\">aE</span><span class=\"token punctuation\">(</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> a3<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\na3<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">aE</span><span class=\"token punctuation\">(</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token function\">aE</span><span class=\"token punctuation\">(</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token function\">aE</span><span class=\"token punctuation\">(</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> a3<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":33,"column":1,"offset":544},"end":{"line":52,"column":4,"offset":852}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"aliasing"},"children":[{"type":"element","tagName":"a","properties":{"href":"#aliasing","aria-label":"aliasing permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Aliasing","position":{"start":{"line":54,"column":5,"offset":858},"end":{"line":54,"column":13,"offset":866}}}],"position":{"start":{"line":54,"column":1,"offset":854},"end":{"line":54,"column":13,"offset":866}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Aliasing is not copying!!! In order to copy an array we need to ","position":{"start":{"line":57,"column":1,"offset":869},"end":{"line":57,"column":65,"offset":933}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"deep","position":{"start":{"line":57,"column":67,"offset":935},"end":{"line":57,"column":71,"offset":939}}}],"position":{"start":{"line":57,"column":65,"offset":933},"end":{"line":57,"column":73,"offset":941}}},{"type":"text","value":" copy the array as so:","position":{"start":{"line":57,"column":73,"offset":941},"end":{"line":57,"column":95,"offset":963}}}],"position":{"start":{"line":57,"column":1,"offset":869},"end":{"line":57,"column":95,"offset":963}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">//create copy of a1</span>\n<span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>a1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> a1<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   a3<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> a1<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*\n// alternative way of copying\n   a3 = Arrays.copyOf(a1,a1.length);\n*/</span>\n\na1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">aE</span><span class=\"token punctuation\">(</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> a1<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">aE</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":59,"column":1,"offset":965},"end":{"line":77,"column":4,"offset":1256}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now we’re getting in to variable arguments which is really cool in Java:","position":{"start":{"line":79,"column":1,"offset":1258},"end":{"line":79,"column":73,"offset":1330}}}],"position":{"start":{"line":79,"column":1,"offset":1258},"end":{"line":79,"column":73,"offset":1330}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printInts</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> intArray<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">:</span> intArray<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">printInts</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// now with varargs</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printInts</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> intArray<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">:</span> intArray<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">printInts</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":81,"column":1,"offset":1332},"end":{"line":95,"column":4,"offset":1635}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When should we use them?","position":{"start":{"line":97,"column":1,"offset":1637},"end":{"line":97,"column":25,"offset":1661}}}],"position":{"start":{"line":97,"column":1,"offset":1637},"end":{"line":97,"column":25,"offset":1661}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"An existing API requires it","position":{"start":{"line":99,"column":3,"offset":1665},"end":{"line":99,"column":30,"offset":1692}}}],"position":{"start":{"line":99,"column":1,"offset":1663},"end":{"line":99,"column":30,"offset":1692}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"To ensure sequence length is fixed","position":{"start":{"line":100,"column":3,"offset":1695},"end":{"line":100,"column":37,"offset":1729}}}],"position":{"start":{"line":100,"column":1,"offset":1693},"end":{"line":100,"column":37,"offset":1729}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Efficiency, especially when implementing highger level data structures","position":{"start":{"line":101,"column":3,"offset":1732},"end":{"line":101,"column":73,"offset":1802}}}],"position":{"start":{"line":101,"column":1,"offset":1730},"end":{"line":101,"column":73,"offset":1802}}},{"type":"text","value":"\n"}],"position":{"start":{"line":99,"column":1,"offset":1663},"end":{"line":101,"column":73,"offset":1802}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Arrays are indexed starting at 0 because when you multiply 0 by the size you always get the first element. Arrays can be indexed from 0 to it’s ","position":{"start":{"line":103,"column":1,"offset":1804},"end":{"line":103,"column":145,"offset":1948}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"length","position":{"start":{"line":103,"column":147,"offset":1950},"end":{"line":103,"column":153,"offset":1956}}}],"position":{"start":{"line":103,"column":145,"offset":1948},"end":{"line":103,"column":155,"offset":1958}}},{"type":"text","value":" - 1.","position":{"start":{"line":103,"column":155,"offset":1958},"end":{"line":103,"column":160,"offset":1963}}}],"position":{"start":{"line":103,"column":1,"offset":1804},"end":{"line":103,"column":160,"offset":1963}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"arrays-vs-linked-list"},"children":[{"type":"element","tagName":"a","properties":{"href":"#arrays-vs-linked-list","aria-label":"arrays vs linked list permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Arrays vs Linked list","position":{"start":{"line":105,"column":5,"offset":1969},"end":{"line":105,"column":26,"offset":1990}}}],"position":{"start":{"line":105,"column":1,"offset":1965},"end":{"line":105,"column":26,"offset":1990}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Arrays can’t change in size, and you cant really insert and remove from arrays. Linkedlist you can remove things, add things, etc. Array’s of bigger sizes reserve a ton of memory which may not be good.","position":{"start":{"line":107,"column":1,"offset":1992},"end":{"line":107,"column":202,"offset":2193}}}],"position":{"start":{"line":107,"column":1,"offset":1992},"end":{"line":107,"column":202,"offset":2193}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"references"},"children":[{"type":"element","tagName":"a","properties":{"href":"#references","aria-label":"references permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"References","position":{"start":{"line":110,"column":5,"offset":2200},"end":{"line":110,"column":15,"offset":2210}}}],"position":{"start":{"line":110,"column":1,"offset":2196},"end":{"line":110,"column":15,"offset":2210}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A useful diagram for visualizing what references may look like: ","position":{"start":{"line":112,"column":1,"offset":2212},"end":{"line":112,"column":65,"offset":2276}}}],"position":{"start":{"line":112,"column":1,"offset":2212},"end":{"line":112,"column":65,"offset":2276}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"http://jaronoff.com/assets/img/references.png"},"children":[{"type":"text","value":"references","position":{"start":{"line":114,"column":2,"offset":2279},"end":{"line":114,"column":12,"offset":2289}}}],"position":{"start":{"line":114,"column":1,"offset":2278},"end":{"line":114,"column":60,"offset":2337}}}],"position":{"start":{"line":114,"column":1,"offset":2278},"end":{"line":114,"column":60,"offset":2337}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now we’re getting into how the JVM and the java compiler works. It’s unneccesary to talk about here so im not going to.","position":{"start":{"line":116,"column":1,"offset":2339},"end":{"line":116,"column":120,"offset":2458}}}],"position":{"start":{"line":116,"column":1,"offset":2339},"end":{"line":116,"column":120,"offset":2458}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"primative-vs-boxed"},"children":[{"type":"element","tagName":"a","properties":{"href":"#primative-vs-boxed","aria-label":"primative vs boxed permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Primative vs Boxed:","position":{"start":{"line":118,"column":5,"offset":2464},"end":{"line":118,"column":24,"offset":2483}}}],"position":{"start":{"line":118,"column":1,"offset":2460},"end":{"line":118,"column":24,"offset":2483}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"for each primitive, there is a boxed:","position":{"start":{"line":120,"column":1,"offset":2485},"end":{"line":120,"column":38,"offset":2522}}}],"position":{"start":{"line":120,"column":1,"offset":2485},"end":{"line":120,"column":38,"offset":2522}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Primitive","position":{"start":{"line":122,"column":3,"offset":2526},"end":{"line":122,"column":12,"offset":2535}}}],"position":{"start":{"line":122,"column":1,"offset":2524},"end":{"line":122,"column":14,"offset":2537}}},{"type":"text","value":"\t","position":{"start":{"line":122,"column":14,"offset":2537},"end":{"line":122,"column":15,"offset":2538}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Boxed","position":{"start":{"line":122,"column":17,"offset":2540},"end":{"line":122,"column":22,"offset":2545}}}],"position":{"start":{"line":122,"column":15,"offset":2538},"end":{"line":122,"column":24,"offset":2547}}},{"type":"text","value":"\nboolean\t\tBoolean\nbyte\t\tByte\nshort\t\tShort\nchar\t\tCharacter\nint\t\t\tInteger\nfloat\t\tFloat\nlong\t\tLong\ndouble\t\tDouble","position":{"start":{"line":122,"column":24,"offset":2547},"end":{"line":130,"column":15,"offset":2657}}}],"position":{"start":{"line":122,"column":1,"offset":2524},"end":{"line":130,"column":15,"offset":2657}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now onto Null","position":{"start":{"line":132,"column":1,"offset":2659},"end":{"line":132,"column":14,"offset":2672}}}],"position":{"start":{"line":132,"column":1,"offset":2659},"end":{"line":132,"column":14,"offset":2672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"null"},"children":[{"type":"element","tagName":"a","properties":{"href":"#null","aria-label":"null permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Null","position":{"start":{"line":134,"column":5,"offset":2678},"end":{"line":134,"column":9,"offset":2682}}}],"position":{"start":{"line":134,"column":1,"offset":2674},"end":{"line":134,"column":9,"offset":2682}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Null is used for when reference types are not initialized. ","position":{"start":{"line":136,"column":1,"offset":2684},"end":{"line":136,"column":60,"offset":2743}}}],"position":{"start":{"line":136,"column":1,"offset":2684},"end":{"line":136,"column":60,"offset":2743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Rules of null","position":{"start":{"line":138,"column":1,"offset":2745},"end":{"line":138,"column":14,"offset":2758}}}],"position":{"start":{"line":138,"column":1,"offset":2745},"end":{"line":138,"column":14,"offset":2758}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Use it only to represent the absence of a reference","position":{"start":{"line":140,"column":3,"offset":2762},"end":{"line":140,"column":54,"offset":2813}}}],"position":{"start":{"line":140,"column":1,"offset":2760},"end":{"line":140,"column":54,"offset":2813}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Use it conscientiously and sparingly!","position":{"start":{"line":141,"column":3,"offset":2816},"end":{"line":141,"column":40,"offset":2853}}}],"position":{"start":{"line":141,"column":1,"offset":2814},"end":{"line":141,"column":40,"offset":2853}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Carefully document where it’s allowed","position":{"start":{"line":142,"column":3,"offset":2856},"end":{"line":142,"column":40,"offset":2893}}}],"position":{"start":{"line":142,"column":1,"offset":2854},"end":{"line":142,"column":40,"offset":2893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Check for it and fail fast","position":{"start":{"line":143,"column":3,"offset":2896},"end":{"line":143,"column":29,"offset":2922}}}],"position":{"start":{"line":143,"column":1,"offset":2894},"end":{"line":143,"column":29,"offset":2922}}},{"type":"text","value":"\n"}],"position":{"start":{"line":140,"column":1,"offset":2760},"end":{"line":143,"column":29,"offset":2922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"equality"},"children":[{"type":"element","tagName":"a","properties":{"href":"#equality","aria-label":"equality permalink","class":"anchor"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Equality","position":{"start":{"line":145,"column":5,"offset":2928},"end":{"line":145,"column":13,"offset":2936}}}],"position":{"start":{"line":145,"column":1,"offset":2924},"end":{"line":145,"column":13,"offset":2936}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Types of equality","position":{"start":{"line":147,"column":1,"offset":2938},"end":{"line":147,"column":18,"offset":2955}}}],"position":{"start":{"line":147,"column":1,"offset":2938},"end":{"line":147,"column":18,"offset":2955}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"shallow vs. deep (same memory location, or same memory contents but at different locations)","position":{"start":{"line":149,"column":3,"offset":2959},"end":{"line":149,"column":94,"offset":3050}}}],"position":{"start":{"line":149,"column":1,"offset":2957},"end":{"line":149,"column":94,"offset":3050}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"intensional vs. extensional (literally the same thing, or calculates/derives to the same thing)","position":{"start":{"line":150,"column":3,"offset":3053},"end":{"line":150,"column":98,"offset":3148}}}],"position":{"start":{"line":150,"column":1,"offset":3051},"end":{"line":150,"column":98,"offset":3148}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"nominal vs. structural (are objects of two classes with same instance variables and values equal?)","position":{"start":{"line":151,"column":3,"offset":3151},"end":{"line":151,"column":101,"offset":3249}}}],"position":{"start":{"line":151,"column":1,"offset":3149},"end":{"line":151,"column":101,"offset":3249}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"physical vs. logical (Are HMSDuration and CompactDuration objects with same duration equal?)","position":{"start":{"line":152,"column":3,"offset":3252},"end":{"line":152,"column":95,"offset":3344}}}],"position":{"start":{"line":152,"column":1,"offset":3250},"end":{"line":152,"column":95,"offset":3344}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"== vs. equals()?","position":{"start":{"line":153,"column":3,"offset":3347},"end":{"line":153,"column":19,"offset":3363}}}],"position":{"start":{"line":153,"column":1,"offset":3345},"end":{"line":153,"column":19,"offset":3363}}},{"type":"text","value":"\n"}],"position":{"start":{"line":149,"column":1,"offset":2957},"end":{"line":153,"column":19,"offset":3363}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"RULES","position":{"start":{"line":155,"column":1,"offset":3365},"end":{"line":155,"column":6,"offset":3370}}}],"position":{"start":{"line":155,"column":1,"offset":3365},"end":{"line":155,"column":6,"offset":3370}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Rules of equals():","position":{"start":{"line":157,"column":3,"offset":3374},"end":{"line":157,"column":25,"offset":3396}}}],"position":{"start":{"line":157,"column":3,"offset":3374},"end":{"line":157,"column":25,"offset":3396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Reflexivity: x.equals(x)","position":{"start":{"line":158,"column":4,"offset":3400},"end":{"line":158,"column":28,"offset":3424}}}],"position":{"start":{"line":158,"column":2,"offset":3398},"end":{"line":158,"column":28,"offset":3424}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Symmetry: x.equals(y) ","position":{"start":{"line":159,"column":4,"offset":3428},"end":{"line":159,"column":26,"offset":3450}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"iff","position":{"start":{"line":159,"column":27,"offset":3451},"end":{"line":159,"column":30,"offset":3454}}}],"position":{"start":{"line":159,"column":26,"offset":3450},"end":{"line":159,"column":31,"offset":3455}}},{"type":"text","value":" y.equals(x)","position":{"start":{"line":159,"column":31,"offset":3455},"end":{"line":159,"column":43,"offset":3467}}}],"position":{"start":{"line":159,"column":2,"offset":3426},"end":{"line":159,"column":43,"offset":3467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Transitivity: if x.equals(y) and y.equals(z) then x.equals(z)","position":{"start":{"line":160,"column":4,"offset":3471},"end":{"line":160,"column":65,"offset":3532}}}],"position":{"start":{"line":160,"column":2,"offset":3469},"end":{"line":160,"column":65,"offset":3532}}},{"type":"text","value":"\n"}],"position":{"start":{"line":158,"column":2,"offset":3398},"end":{"line":160,"column":65,"offset":3532}}},{"type":"text","value":"\n"}],"position":{"start":{"line":157,"column":1,"offset":3372},"end":{"line":160,"column":65,"offset":3532}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Rule(s) of hashCode():","position":{"start":{"line":161,"column":3,"offset":3535},"end":{"line":161,"column":29,"offset":3561}}}],"position":{"start":{"line":161,"column":3,"offset":3535},"end":{"line":161,"column":29,"offset":3561}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Compatibility: if x.equals(y) then x.hashCode() == y.hashCode()","position":{"start":{"line":162,"column":4,"offset":3565},"end":{"line":162,"column":67,"offset":3628}}}],"position":{"start":{"line":162,"column":2,"offset":3563},"end":{"line":162,"column":67,"offset":3628}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Non-injectivity: x.hashCode() == y.hashCode() doesn’t contradict !x.equals(y)","position":{"start":{"line":163,"column":4,"offset":3632},"end":{"line":163,"column":81,"offset":3709}}}],"position":{"start":{"line":163,"column":2,"offset":3630},"end":{"line":163,"column":81,"offset":3709}}},{"type":"text","value":"\n"}],"position":{"start":{"line":162,"column":2,"offset":3563},"end":{"line":163,"column":81,"offset":3709}}},{"type":"text","value":"\n"}],"position":{"start":{"line":161,"column":1,"offset":3533},"end":{"line":163,"column":81,"offset":3709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Rule 9 (corollary): “Always override hashCode when you override equals” ---Joshua Bloch, Effective Java 2/E","position":{"start":{"line":164,"column":3,"offset":3712},"end":{"line":164,"column":110,"offset":3819}}}],"position":{"start":{"line":164,"column":1,"offset":3710},"end":{"line":164,"column":110,"offset":3819}}},{"type":"text","value":"\n"}],"position":{"start":{"line":157,"column":1,"offset":3372},"end":{"line":164,"column":110,"offset":3819}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Next class is exceptions, and more basic/ interesting java principles.","position":{"start":{"line":166,"column":1,"offset":3821},"end":{"line":166,"column":71,"offset":3891}}}],"position":{"start":{"line":166,"column":1,"offset":3821},"end":{"line":166,"column":71,"offset":3891}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":187,"column":1,"offset":3912}}}}