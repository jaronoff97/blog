{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/2016-05-13-Control-Flow-Part-2/","webpackCompilationHash":"","result":{"data":{"markdownRemark":{"id":"781b0b23-b967-51b9-9ddf-19d0c373d92a","html":"<p>And we’re back (after a slight hiatus)! Let another day of Python begin!!\nSo let’s back up for a second. We can make variables really easily:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">x<span class=\"token operator\">=</span><span class=\"token number\">5</span>\ny<span class=\"token operator\">=</span><span class=\"token number\">6</span>\nz<span class=\"token operator\">=</span><span class=\"token number\">7</span>\na<span class=\"token operator\">=</span><span class=\"token number\">8</span>\nb<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token comment\">#and so forth</span></code></pre></div>\n<p>And right now if we wanted to print out all the numbers between 1 and 100 we could do this:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">num<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> num <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n    num <span class=\"token operator\">=</span> num <span class=\"token operator\">+</span><span class=\"token number\">1</span></code></pre></div>\n<p>This will print all the numbers between 0 and 100 (inclusive). Okay now for the new stuff. Let’s say we were in a classroom, in that class we have a bunch of students.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">student1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Jacob\"</span>\nstudent2 <span class=\"token operator\">=</span> <span class=\"token string\">\"Sam\"</span>\nstudent3 <span class=\"token operator\">=</span> <span class=\"token string\">\"Corey\"</span>\nstudent4 <span class=\"token operator\">=</span> <span class=\"token string\">\"Michael\"</span>\n\n<span class=\"token comment\">#If we wanted to print each student:</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>student1<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>student2<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>student3<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>student4<span class=\"token punctuation\">)</span></code></pre></div>\n<p>As you can tell this is a bit annoying, lets say (theoretically) our classroom had 100 kids, we would have to write 100 print statements! In order to make this easier we can have a list of students.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">students <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"Jacob\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sam\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Corey\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Michael\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>So now we have a list of four students. Right now the only way we can print out each student is like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">num <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> num<span class=\"token operator\">&lt;</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>students<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#len is a built in function like print that tells us how long something is, it could be an array, a string, etc.</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>students<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    num <span class=\"token operator\">=</span> num <span class=\"token operator\">+</span> <span class=\"token number\">1</span></code></pre></div>\n<p>We access what’s called an index in our array with [somenumber]. But be careful with this, because if the length of our array is 4 and we ask for the object at the fifth index: students[4] (keep in mind that programmers start counting at 0) we’ll get an error! The easiest way to avoid this is by using a new kind of loop!</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> student <span class=\"token keyword\">in</span> students<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>student<span class=\"token punctuation\">)</span></code></pre></div>\n<p>The magical <strong>for</strong> loop can do some awesome stuff. We can use it to iterate through a list, a string, and even a range of numbers!</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#range is another built in function in python</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token comment\">#prints 0 through 9</span></code></pre></div>\n<p>With python, we can have lists of strings, and numbers together. Lists have some built in functions that are really useful:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">list</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"string1\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"string2\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">if</span> <span class=\"token number\">10</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">list</span><span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token builtin\">list</span><span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> thing <span class=\"token keyword\">in</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>thing<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Here are some of the functions of array:</p>\n<ul>\n<li>list.<strong>append(obj)</strong> #add an object to the end of an array</li>\n<li>list.<strong>count(obj)</strong> #count the amount of times the object shows up in the array</li>\n<li>list.<strong>index(obj)</strong> #where’s the first occurance of the object</li>\n<li>list.<strong>insert(index, obj)</strong> #put an object at a certain place</li>\n<li>list.<strong>remove(obj)</strong> #get rid of an object if it’s there</li>\n</ul>\n<p>Next time we’re going to go over a different kind of list called a dictionary. In the meantime, I’d suggest to make a program that uses lists and some of the other things we’ve learned. </p>\n<p>{% gist 6c88c16f0e09bfc346c76b6bdd265af6 %}</p>","fields":{"slug":"/posts/2016-05-13-Control-Flow-Part-2/","tagSlugs":["/tag/python/","/tag/code/","/tag/lists/","/tag/for/"]},"frontmatter":{"date":"2016-05-13T00:00:00.000Z","description":"Part 4: I'll keep listing things for a while","tags":["python","code","lists","for"],"title":"Part 4, More Loops"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/2016-05-13-Control-Flow-Part-2/"}}}