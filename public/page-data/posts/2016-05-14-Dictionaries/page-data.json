{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/2016-05-14-Dictionaries/","webpackCompilationHash":"","result":{"data":{"markdownRemark":{"id":"6794dae8-6bfc-5c9a-ab97-80fe4e2bd7dc","html":"<p>Welcome back! Today is our last day of python and we’re going to cover the last part of basic python: dictionaries. Dictionaries work just like you’d expect. For every ‘key’ in the dictionary there must be a corresponding value. Lets think about this like a literal dictionary:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">mirriam_webster <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"Programming\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"the action or process of writing computer programs.\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Python\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"a high-level general-purpose programming language.\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Learning\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"the acquisition of knowledge or skills through experience, study, or by being taught\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>To make a dictionary we use {}, curly brackets. Each key has quotations around it, followed by a colon to denote the next thing is the key’s value. Both the key and the value can be any kind of object (a number, a word, a character, etc.)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>mirriam_webster<span class=\"token punctuation\">[</span><span class=\"token string\">\"Python\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#Print a value</span>\nmirriam_webster<span class=\"token punctuation\">[</span><span class=\"token string\">\"Ugh\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"The sound a programmer makes when stuck\"</span> <span class=\"token comment\">#add a value</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>mirriam_webster<span class=\"token punctuation\">[</span><span class=\"token string\">\"Ugh\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>mirriam_webster<span class=\"token punctuation\">[</span><span class=\"token string\">\"GRR\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#ERROR</span></code></pre></div>\n<p>We can easily add a value just by adding a new key and value to our pre-existing dictionary. Similarly to how we can iterate through a list, we can also use a for loop to iterate through our dictionary.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> mirriam_webster<span class=\"token punctuation\">.</span>iteritems<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"{0}:{1}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Now I know this looks a bit weird, lets break down what’s happening here:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span> <span class=\"token comment\">#we're making two variables x and y equal to 5 and 10 respectively</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>mirriam_webster<span class=\"token punctuation\">.</span>iteritems<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#returns each key and value as basically a point (x,y) so we can set variables equal to it.</span></code></pre></div>\n<p>The next post is a continuation of this one, which will describe a simple todolist app. </p>","fields":{"slug":"/posts/2016-05-14-Dictionaries/","tagSlugs":["/tag/python/","/tag/code/","/tag/dictionary/"]},"frontmatter":{"date":"2016-05-14T00:00:00.000Z","description":"Part 5: Every key has a value","tags":["python","code","dictionary"],"title":"Part 5, Dictionaries"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/2016-05-14-Dictionaries/"}}}