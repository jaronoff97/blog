{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/2017-02-24-CS-3500-Day-14/","webpackCompilationHash":"bfab4e6a7e3f8097a2ef","result":{"data":{"markdownRemark":{"id":"78d4b50f-f796-5b10-a686-7b01aee2696a","html":"<h3 id=\"object-oriented-design\"><a href=\"#object-oriented-design\" aria-label=\"object oriented design permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Object Oriented Design</h3>\n<p>Today we’re talking more about big O, and efficiency. </p>\n<table>\n<thead>\n<tr>\n<th>T(n)</th>\n<th align=\"center\">Name</th>\n<th align=\"right\">Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>O(1)</td>\n<td align=\"center\">Constant</td>\n<td align=\"right\">Adding to the front of a linked list</td>\n</tr>\n<tr>\n<td>O(n)</td>\n<td align=\"center\">Linear</td>\n<td align=\"right\">Accessing each element of an array</td>\n</tr>\n<tr>\n<td>O(n^2)</td>\n<td align=\"center\">Quadratic</td>\n<td align=\"right\">Checking duplicates in a list</td>\n</tr>\n<tr>\n<td>O(n^3)</td>\n<td align=\"center\">Cubic</td>\n<td align=\"right\">Matrix multiplication</td>\n</tr>\n<tr>\n<td>O(n^d)</td>\n<td align=\"center\">Polynomial</td>\n<td align=\"right\">A bunch of random things</td>\n</tr>\n<tr>\n<td>O(log(n))</td>\n<td align=\"center\">Logarithmic</td>\n<td align=\"right\">Binary search</td>\n</tr>\n<tr>\n<td>O(nlog(n))</td>\n<td align=\"center\">Linearithmic</td>\n<td align=\"right\">Mergesort, heapsort, quicksort</td>\n</tr>\n</tbody>\n</table>\n<p>A representation:</p>\n<p><img src=\"https://apelbaum.files.wordpress.com/2011/10/yaacovapelbaumbigoplot.jpg\" alt=\"bigo\"></p>\n<p>Now we’re talking about the traveling salesman problem. </p>\n<table>\n<thead>\n<tr>\n<th>Data structure</th>\n<th align=\"center\">Add to front</th>\n<th align=\"center\">Add to back</th>\n<th align=\"center\">Add in general</th>\n<th align=\"center\">Find</th>\n<th align=\"center\">Remove</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>List(ArrayList)</td>\n<td align=\"center\">O(n)</td>\n<td align=\"center\">O(1)^</td>\n<td align=\"center\">O(n)</td>\n<td align=\"center\">O(n)</td>\n<td align=\"center\">O(log(n))</td>\n</tr>\n<tr>\n<td>LinkedList</td>\n<td align=\"center\">O(1)</td>\n<td align=\"center\">O(1)</td>\n<td align=\"center\">O(n)</td>\n<td align=\"center\">O(n)</td>\n<td align=\"center\">Linear</td>\n</tr>\n<tr>\n<td>TreeSet</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">O(log(n))</td>\n<td align=\"center\">O(log(n))</td>\n<td align=\"center\">O(log(n))</td>\n</tr>\n<tr>\n<td>TreeMap</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">O(log(n))</td>\n<td align=\"center\">O(log(n))</td>\n<td align=\"center\">O(log(n))</td>\n</tr>\n<tr>\n<td>HashMap</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">O(1)**</td>\n<td align=\"center\">O(1)**</td>\n<td align=\"center\">O(1)**</td>\n</tr>\n<tr>\n<td>HashSet</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">N/A</td>\n<td align=\"center\">O(1)**</td>\n<td align=\"center\">O(1)**</td>\n<td align=\"center\">O(1)**</td>\n</tr>\n</tbody>\n</table>\n<p>^ Amortized\n** Only when the hashcode function has to disperse properly among the buckets</p>","fields":{"slug":"/posts/2017-02-24-CS-3500-Day-14/","tagSlugs":["/tag/ood/","/tag/java/","/tag/notes/"]},"frontmatter":{"date":"2017-02-24T00:00:00.000Z","description":"Object Oriented Design","tags":["OOD","java","notes"],"title":"CS 3500 Day 14"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/2017-02-24-CS-3500-Day-14/"}}}