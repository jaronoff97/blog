<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>optional on Blog</title><link>https://jaronoff97.github.io/tags/optional/</link><description>Recent content in optional on Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 19 May 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://jaronoff97.github.io/tags/optional/index.xml" rel="self" type="application/rss+xml"/><item><title>Part 4, Optionals, Extensions, and Protocols</title><link>https://jaronoff97.github.io/archives/2016-05-19-optionals-extensions-protocols/</link><pubDate>Thu, 19 May 2016 00:00:00 +0000</pubDate><guid>https://jaronoff97.github.io/archives/2016-05-19-optionals-extensions-protocols/</guid><description>Now that we&amp;rsquo;ve gotten over the hurdle of closures we can learn the last three things we need to know before we start iOS programming. Let&amp;rsquo;s start with Optionals.
Let&amp;rsquo;s make a class with a couple properties
class Person { var name: String var age: Int var street: String init(name: String, age: Int) { self.name = name self.age = age } } let jacob = Person(name: &amp;#34;Jacob&amp;#34;, age: 18) print(jacob) When you run this code, you&amp;rsquo;ll get two errors:</description></item></channel></rss>